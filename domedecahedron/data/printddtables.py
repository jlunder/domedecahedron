from operator import itemgetter
import dodecahedronverts
from dodecahedronverts import verts

faceverts = [
    [ 0,  4,  3,  2,  1],
    [ 3,  4,  5,  6,  7],
    [ 2,  3,  7,  8,  9],
    [ 1,  2,  9, 10, 11],
    [ 0,  1, 11, 12, 13],
    [ 0, 13, 14,  5,  4],
    [ 5, 14, 15, 16,  6],
    [12, 19, 15, 14, 13],
    [10, 18, 19, 12, 11],
    [ 8, 17, 18, 10,  9],
    [ 6, 16, 17,  8,  7],
    [15, 19, 18, 17, 16],
]

structverts = [
    [
        [
            # group 0, dodecahedron 0
            (0.01463737167921203, 0.26041013586433176, 0.42597782959169406),
            (0.03902734644166456, 0.028355026945068, 0.3368524269666695),
            (0.2521879532249382, -0.06655018977261865, 0.425977829591694),
            (0.35953847851710014, 0.10685026950543998, 0.5701857603000029),
            (0.2127241450745379, 0.308922863721809, 0.5701857603000028),
            (0.3400037162458591, 0.49680262237364703, 0.46583592135001267),
            (0.5654811507458093, 0.4108461048022408, 0.40134417415834106),
            (0.5775542977915853, 0.16984229673669643, 0.46583592135001267),
            (0.6049449588962095, 0.03537305130781321, 0.2571362434500323),
            (0.403857499158712, -0.11072554004004462, 0.23250258801667922),
            (0.284433826820774, -0.04312219125255898, 0.023802910116698772),
            (0.05895639232082389, 0.04283432631884726, 0.0882946573083705),
            (0.046883245275047836, 0.28383813438439165, 0.023802910116698772),
            (0.0194925841704236, 0.41830737981327487, 0.23250258801667922),
            (0.22058004390792113, 0.5644059711611327, 0.2571362434500323),
            (0.37224958984169493, 0.5202306208937068, 0.06366100187501744),
            (0.5854101966249685, 0.42532540417602005, 0.152786404500042),
            (0.609800171387421, 0.19327029525675632, 0.06366100187501744),
            (0.4117133979920952, 0.1447575673992791, -0.08054692883329129),
            (0.264899064549533, 0.3468301616156481, -0.0805469288332914),
        ],
        [
            # group 0, dodecahedron 1
            (0.6488275178290854, 0.22162532220182424, 0.0005134288416870358),
            (0.624437543066633, 0.453680431121088, 0.08963883146671159),
            (0.41127693628335943, 0.5485856478387747, 0.0005134288416870358),
            (0.30392641099119744, 0.3751851885607161, -0.1436945018666218),
            (0.45074074443375967, 0.17311259434434711, -0.1436945018666218),
            (0.5321608511624187, 0.1368620272678654, -0.3770278351999552),
            (0.4356669110458119, 0.3165305389195111, -0.521235765908264),
            (0.2946102696166927, 0.46382235290481605, -0.3770278351999552),
            (0.39620310289541166, 0.6920035924139387, -0.3770278351999552),
            (0.468307068249566, 0.744390189681557, -0.1436945018666218),
            (0.7167142349708473, 0.7704988349743107, -0.1436945018666218),
            (0.8132081750874541, 0.590830323322665, 0.0005134288416870358),
            (0.9542648165165734, 0.4435385093373601, -0.1436945018666218),
            (0.8526719832378544, 0.21535726982823747, -0.1436945018666218),
            (0.7805680178837, 0.1629706725606191, -0.3770278351999552),
            (0.8375981498499065, 0.35877521440340143, -0.521235765908264),
            (0.624437543066633, 0.45368043112108813, -0.6103611685332886),
            (0.6000475683041806, 0.685735540040352, -0.521235765908264),
            (0.7981343416995064, 0.734248267897829, -0.3770278351999552),
            (0.9449486751420686, 0.53217567368146, -0.3770278351999552),
        ],
        [
            # group 0, dodecahedron 2
            (0.639074914745845, 0.7140905669854198, -0.5843833389415947),
            (0.6634648895082975, 0.4820354580661561, -0.6735087415666192),
            (0.8766254962915712, 0.38713024134846946, -0.5843833389415947),
            (0.9839760215837332, 0.5605307006265281, -0.4401754082332858),
            (0.8371616881411709, 0.7626032948428971, -0.4401754082332858),
            (0.9644412593124921, 0.9504830534947352, -0.544525247183276),
            (1.1899186938124422, 0.864526535923329, -0.6090169943749475),
            (1.2019918408582182, 0.6235227278577845, -0.544525247183276),
            (1.2293825019628426, 0.48905348242890134, -0.7532249250832563),
            (1.028295042225345, 0.3429548910810435, -0.7778585805166094),
            (0.908871369887407, 0.41055823986852913, -0.9865582584165897),
            (0.683393935387457, 0.49651475743993534, -0.9220665112249182),
            (0.6713207883416809, 0.7375185655054798, -0.9865582584165897),
            (0.6439301272370566, 0.871987810934363, -0.7778585805166094),
            (0.8450175869745542, 1.0180864022822207, -0.7532249250832563),
            (0.996687132908328, 0.9739110520147949, -0.9467001666582711),
            (1.2098477396916016, 0.8790058352971082, -0.8575747640332465),
            (1.2342377144540542, 0.6469507263778445, -0.9467001666582711),
            (1.0361509410587282, 0.5984379985203672, -1.09090809736658),
            (0.889336607616166, 0.8005105927367362, -1.09090809736658),
        ],
    ],
    [
        [
            # group 1, dodecahedron 0
            (-0.23284047890107445, -0.11752873221333338, 0.425977829591694),
            (-0.04406984688025345, 0.019621159988243764, 0.3368524269666695),
            (-0.06845982164270603, 0.2516762689075076, 0.42597782959169406),
            (-0.2723042870514748, 0.25794432128109435, 0.5701857603000029),
            (-0.3738971203301937, 0.029763081771971678, 0.5701857603000028),
            (-0.6002455497652351, 0.04605054446320633, 0.4658359213500126),
            (-0.638543739177529, 0.284297989506008, 0.401344174158341),
            (-0.43586489250686666, 0.41525554558404737, 0.46583592135001267),
            (-0.3331064404900414, 0.5062111766415439, 0.2571362434500323),
            (-0.10603761905692632, 0.4051136238003195, 0.23250258801667933),
            (-0.10487200031881994, 0.26788801534869344, 0.023802910116698883),
            (-0.06657381090652603, 0.02964057030589179, 0.0882946573083705),
            (-0.2692526575771884, -0.1013169857721476, 0.023802910116698772),
            (-0.3720111095940137, -0.19227261682964414, 0.23250258801667922),
            (-0.5990799310271288, -0.09117506398841974, 0.2571362434500322),
            (-0.636657728441349, 0.06226229090439217, 0.06366100187501744),
            (-0.6610477032038016, 0.294317399823656, 0.152786404500042),
            (-0.4722770711829806, 0.43146729202523315, 0.06366100187501744),
            (-0.3312204297538614, 0.2841754780399281, -0.08054692883329129),
            (-0.4328132630325803, 0.055994238530805415, -0.0805469288332914),
        ],
        [
            # group 1, dodecahedron 1
            (-0.516346918063234, 0.45108845201347686, 0.0005134288416870358),
            (-0.705117550084055, 0.3139385598118998, 0.08963883146671159),
            (-0.6807275753216026, 0.08188345089263593, 0.0005134288416869248),
            (-0.47688310991283367, 0.07561539851904908, -0.1436945018666218),
            (-0.37529027663411485, 0.3037966380281718, -0.1436945018666218),
            (-0.38460641800861955, 0.3924338023722718, -0.3770278351999552),
            (-0.49195694330078155, 0.21903334309421307, -0.521235765908264),
            (-0.5489870752669881, 0.023228801251430786, -0.3770278351999552),
            (-0.7973942419882692, -0.002879844041322799, -0.3770278351999552),
            (-0.8788143487169284, 0.0333707230351587, -0.1436945018666218),
            (-1.0256286821594907, 0.23544331725152773, -0.1436945018666218),
            (-0.9182781568673286, 0.4088437765295865, 0.0005134288416870358),
            (-0.8612480249011221, 0.6046483183723688, -0.1436945018666218),
            (-0.6128408581798409, 0.6307569636651223, -0.1436945018666218),
            (-0.5314207514511817, 0.5945063965886408, -0.3770278351999552),
            (-0.7295075248465076, 0.5459936687311636, -0.5212357659082638),
            (-0.7051175500840552, 0.3139385598118998, -0.6103611685332886),
            (-0.8938881821048762, 0.1767886676103227, -0.521235765908264),
            (-1.0349448235339953, 0.32408048159562775, -0.3770278351999552),
            (-0.9333519902552765, 0.5522617211047505, -0.3770278351999552),
        ],
        [
            # group 1, dodecahedron 2
            (-0.9379580289851295, 0.1964098275985664, -0.5843833389415947),
            (-0.7491873969643085, 0.33355971980014354, -0.6735087415666192),
            (-0.7735773717267611, 0.5656148287194074, -0.5843833389415947),
            (-0.9774218371355299, 0.5718828810929941, -0.4401754082332858),
            (-1.0790146704142487, 0.34370164158387145, -0.4401754082332858),
            (-1.3053630998492902, 0.3599891042751061, -0.544525247183276),
            (-1.343661289261584, 0.5982365493179078, -0.6090169943749477),
            (-1.1409824425909216, 0.7291941053959472, -0.544525247183276),
            (-1.0382239905740964, 0.8201497364534437, -0.7532249250832563),
            (-0.8111551691409813, 0.7190521836122192, -0.7778585805166094),
            (-0.8099895504028749, 0.5818265751605932, -0.9865582584165897),
            (-0.7716913609905811, 0.34357913011779156, -0.922066511224918),
            (-0.9743702076612435, 0.21262157403975218, -0.9865582584165897),
            (-1.0771286596780687, 0.12166594298225564, -0.7778585805166094),
            (-1.3041974811111838, 0.22276349582348004, -0.7532249250832563),
            (-1.341775278525404, 0.37620085071629195, -0.9467001666582711),
            (-1.3661652532878565, 0.6082559596355558, -0.8575747640332465),
            (-1.1773946212670356, 0.7454058518371329, -0.9467001666582711),
            (-1.0363379798379164, 0.5981140378518279, -1.09090809736658),
            (-1.1379308131166352, 0.3699327983427052, -1.09090809736658),
        ],
    ],
    [
        [
            # group 2, dodecahedron 0
            (0.21820310722186245, -0.14288140365099833, 0.42597782959169406),
            (0.005042500438588823, -0.047976186933311626, 0.3368524269666695),
            (-0.1837281315822322, -0.1851260791348888, 0.425977829591694),
            (-0.08723419146562528, -0.36479459078653426, 0.5701857603000029),
            (0.16117297525565585, -0.33868594549378056, 0.5701857603000028),
            (0.26024183351937613, -0.5428531668368533, 0.46583592135001267),
            (0.07306258843171992, -0.6951440943082488, 0.401344174158341),
            (-0.1416894052847186, -0.5850978423207437, 0.4658359213500126),
            (-0.27183851840616813, -0.541584227949357, 0.2571362434500322),
            (-0.29781988010178573, -0.2943880837602747, 0.23250258801667922),
            (-0.17956182650195415, -0.22476582409613433, 0.023802910116698772),
            (0.007617418585702092, -0.07247489662473888, 0.0882946573083705),
            (0.2223694123021406, -0.18252114861224392, 0.023802910116698883),
            (0.3525185254235902, -0.22603476298363062, 0.23250258801667922),
            (0.3784998871192077, -0.4732309071727129, 0.2571362434500323),
            (0.2644081385996542, -0.5824929117980988, 0.06366100187501744),
            (0.07563750657883318, -0.719642803999676, 0.152786404500042),
            (-0.13752310020444045, -0.6247375872819892, 0.06366100187501744),
            (-0.08049296823823385, -0.428933045439207, -0.08054692883329129),
            (0.16791419848304728, -0.4028244001464533, -0.0805469288332914),
        ],
        [
            # group 2, dodecahedron 1
            (-0.13248059976585164, -0.6727137742153009, 0.0005134288416870358),
            (0.080680007017422, -0.7676189909329877, 0.08963883146671159),
            (0.26945063903824307, -0.6304690987314105, 0.0005134288416870358),
            (0.17295669892163618, -0.45080058707976506, -0.1436945018666218),
            (-0.07545046779964494, -0.47690923237251875, -0.1436945018666218),
            (-0.1475544331537995, -0.529295829640137, -0.3770278351999552),
            (0.05629003225496948, -0.535563882013724, -0.521235765908264),
            (0.2543768056502953, -0.48705115415624667, -0.3770278351999552),
            (0.4011911390928575, -0.6891237483726157, -0.3770278351999552),
            (0.4105072804673624, -0.7777609127167157, -0.1436945018666218),
            (0.30891444718864347, -1.0059421522258383, -0.1436945018666218),
            (0.1050699817798745, -0.9996740998522514, 0.0005134288416870358),
            (-0.0930167916154513, -1.0481868277097286, -0.1436945018666218),
            (-0.23983112505801346, -0.8461142334933597, -0.1436945018666218),
            (-0.2491472664325184, -0.7574770691492597, -0.3770278351999552),
            (-0.10809062500339907, -0.9047688831345648, -0.521235765908264),
            (0.08068000701742198, -0.7676189909329877, -0.6103611685332886),
            (0.2938406138006956, -0.8625242076506745, -0.521235765908264),
            (0.23681048183448894, -1.0583287494934566, -0.3770278351999552),
            (-0.011596684886792177, -1.0844373947862103, -0.3770278351999552),
        ],
        [
            # group 2, dodecahedron 2
            (0.29888311423928443, -0.910500394583986, -0.5843833389415947),
            (0.08572250745601082, -0.8155951778662993, -0.6735087415666192),
            (-0.1030481245648102, -0.9527450700678765, -0.5843833389415947),
            (-0.006554184448203285, -1.132413581719522, -0.4401754082332858),
            (0.24185298227307783, -1.1063049364267683, -0.4401754082332858),
            (0.34092184053679814, -1.310472157769841, -0.544525247183276),
            (0.1537425954491419, -1.4627630852412363, -0.6090169943749477),
            (-0.06100939826729661, -1.3527168332537314, -0.544525247183276),
            (-0.19115851138874618, -1.3092032188823446, -0.7532249250832563),
            (-0.21713987308436372, -1.0620070746932624, -0.7778585805166094),
            (-0.09888181948453216, -0.992384815029122, -0.9865582584165897),
            (0.08829742560312409, -0.8400938875577266, -0.922066511224918),
            (0.3030494193195626, -0.9501401395452316, -0.9865582584165897),
            (0.43319853244101214, -0.9936537539166184, -0.7778585805166094),
            (0.4591798941366297, -1.2408498981057006, -0.7532249250832563),
            (0.3450881456170762, -1.3501119027310864, -0.9467001666582711),
            (0.15631751359625518, -1.4872617949326636, -0.8575747640332465),
            (-0.056843093187018454, -1.392356578214977, -0.9467001666582711),
            (0.00018703877918814504, -1.1965520363721946, -1.09090809736658),
            (0.2485942055004693, -1.170443391079441, -1.09090809736658),
        ],
    ],
    [
        [
            (0.02438997476245247, -0.23205510891926384, 1.0108745973749755),
            (0.0, -4.163336342344337e-17, 1.1),
            (-0.2131606067832736, 0.09490521671768665, 1.0108745973749755),
            (-0.3205111320754356, -0.07849524256037198, 0.8666666666666667),
            (-0.17369679863287332, -0.28056783677674096, 0.8666666666666667),
            (-0.09227669190421423, -0.3168184038532227, 0.6333333333333333),
            (-0.1887706320208211, -0.137149892201577, 0.4891254026250245),
            (-0.32982727344994034, 0.010141921783727956, 0.6333333333333333),
            (-0.22823444017122135, 0.2383231612928506, 0.6333333333333333),
            (-0.15613047481706696, 0.290709758560469, 0.8666666666666667),
            (0.09227669190421423, 0.3168184038532227, 0.8666666666666667),
            (0.1887706320208211, 0.137149892201577, 1.0108745973749755),
            (0.32982727344994034, -0.010141921783727956, 0.8666666666666667),
            (0.22823444017122135, -0.2383231612928506, 0.8666666666666667),
            (0.15613047481706696, -0.290709758560469, 0.6333333333333333),
            (0.2131606067832736, -0.09490521671768665, 0.4891254026250245),
            (0.0, 4.163336342344337e-17, 0.3999999999999999),
            (-0.02438997476245247, 0.23205510891926384, 0.48912540262502446),
            (0.17369679863287332, 0.28056783677674096, 0.6333333333333333),
            (0.3205111320754356, 0.07849524256037198, 0.6333333333333333),
        ],
    ],
]

print
for v in verts:
    print "    {%sf, %sf, %sf}," % (repr(v[0]), repr(v[1]), repr(v[2]),)

def distsqr(a, b):
    dx = b[0] - a[0]
    dy = b[1] - a[1]
    dz = b[2] - a[2]
    return dx * dx + dy * dy + dz * dz

def nearest3(i):
    l = [(j, distsqr(verts[i], verts[j]),) for j in range(20)]
    return sorted([x[0] for x in sorted(l, key=itemgetter(1))[1:4]])

def middle6(i):
    l = [(j, distsqr(verts[i], verts[j]),) for j in range(20)]
    return sorted([x[0] for x in sorted(l, key=itemgetter(1))[4:10]])

def middlefar6(i):
    l = [(j, distsqr(verts[i], verts[j]),) for j in range(20)]
    return sorted([x[0] for x in sorted(l, key=itemgetter(1))[10:16]])

def far3(i):
    l = [(j, distsqr(verts[i], verts[j]),) for j in range(20)]
    return sorted([x[0] for x in sorted(l, key=itemgetter(1))[16:19]])

def farthest1(i):
    l = [(j, -distsqr(verts[i], verts[j]),) for j in range(20)]
    return sorted(l, key=itemgetter(1))[0][0]

print
print "adjacency:"
for vv in [nearest3(i) for i in range(20)]:
    print "{%d, %d, %d}," % (vv[0], vv[1], vv[2],)
print
print "adjacency-midnear:"
for vv in [middle6(i) for i in range(20)]:
    print "{%d, %d, %d, %d, %d, %d}," % (vv[0], vv[1], vv[2], vv[3], vv[4], vv[5],)
print
print "adjacency-midfar:"
for vv in [middlefar6(i) for i in range(20)]:
    print "{%d, %d, %d, %d, %d, %d}," % (vv[0], vv[1], vv[2], vv[3], vv[4], vv[5],)
print
print "adjacency-far:"
for vv in [far3(i) for i in range(20)]:
    print "{%d, %d, %d}," % (vv[0], vv[1], vv[2],)
print
print "opposition:"
print [farthest1(i) for i in range(20)]
print
print "face-adjacency:"
for i in range(12):
    faces = {}
    for j in range(5):
        for k in range(12):
            if k == i:
                continue
            for l in range(5):
                if faceverts[i][j] == faceverts[k][l]:
                    faces[k] = True;
    faces = list(faces.keys())
    faces.sort()
    print "{%2d, %2d, %2d, %2d, %2d}," % (faces[0], faces[1], faces[2], faces[3], faces[4],)
print
print "face-opposition:"
print dodecahedronverts.faceopp
print
print "dodecahedron-adjacency:"
adjacencies = {}
def add_adjacency(g0i, d0i, v0i, g1i, d1i, v1i):
    swap = False
    if g0i > g1i:
        swap = True
    elif g0i == g1i and d0i > d1i:
        swap = True
    elif g0i == g1i and d0i == d1i and v0i > v1i:
        swap = True
    if swap:
        t = g0i
        g0i = g1i
        g1i = t
        t = d0i
        d0i = d1i
        d1i = t
        t = v0i
        v0i = v1i
        v1i = t
    adjacencies[(g0i, d0i, v0i, g1i, d1i, v1i)] = True

def index(g, d, v):
    if g == 3:
        return v
    else:
        return (g * 3 + d) * 20 + v + 20

for g0i in range(len(structverts)):
    g0 = structverts[g0i]
    for d0i in range(len(g0)):
        d0 = g0[d0i]
        for g1i in range(len(structverts)):
            g1 = structverts[g1i]
            for d1i in range(len(g1)):
                d1 = g1[d1i]
                if g0i == g1i and d1i == d0i:
                    continue
                for v0i in range(len(d0)):
                    for v1i in range(len(d1)):
                        v0 = d0[v0i]
                        v1 = d1[v1i]
                        if distsqr(v0, v1) < 0.08 * 0.08:
                            add_adjacency(g0i, d0i, v0i, g1i, d1i, v1i)
adjacencies = list(adjacencies.keys())
adjacencies.sort()
adjacencyindexes = []
for i in range(3 * 3 * 20 + 20):
    ai = []
    for a in adjacencies:
        ai0 = index(a[0], a[1], a[2])
        ai1 = index(a[3], a[4], a[5])
        if ai0 == i:
            ai.append(ai1)
        if ai1 == i:
            ai.append(ai0)
    adjacencyindexes.append(ai)
for ai in adjacencyindexes:
    print "{%d, {%d, %d, %d}}" % (len(ai), ai[0] if len(ai) > 0 else 0, ai[1] if len(ai) > 1 else 0, ai[2] if len(ai) > 2 else 0)

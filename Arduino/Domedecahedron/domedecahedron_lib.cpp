#include "domedecahedron.h"

#include "dais_input.h"


// (1.0 + sqrt(5.0)) / 2.0
#define PHI (1.618033988749895f)
// 2.0 / (1.0 + sqrt(5.0))
#define IPHI (0.6180339887498948f)

// These vertices are given in the standard threading order
//    { 0.0f, -IPHI,   PHI},
//    { 0.0f,  IPHI,   PHI},
//    {-1.0f,  1.0f,  1.0f},
//    { -PHI,  0.0f,  IPHI},
//    {-1.0f, -1.0f,  1.0f},
//    {-IPHI,  -PHI,  0.0f},
//    {-1.0f, -1.0f, -1.0f},
//    { -PHI,  0.0f, -IPHI},
//    {-1.0f,  1.0f, -1.0f},
//    {-IPHI,   PHI,  0.0f},
//    { IPHI,   PHI,  0.0f},
//    { 1.0f,  1.0f,  1.0f},
//    {  PHI,  0.0f,  IPHI},
//    { 1.0f, -1.0f,  1.0f},
//    { IPHI,  -PHI,  0.0f},
//    { 1.0f, -1.0f, -1.0f},
//    { 0.0f, -IPHI,  -PHI},
//    { 0.0f,  IPHI,  -PHI},
//    { 1.0f,  1.0f, -1.0f},
//    {  PHI,  0.0f, -IPHI},

// normalized to unit radius
//    {0.0f, -0.35682208977309f, 0.9341723589627159f},
//    {0.0f, 0.35682208977309f, 0.9341723589627159f},
//    {-0.5773502691896258f, 0.5773502691896258f, 0.5773502691896258f},
//    {-0.9341723589627159f, 0.0f, 0.35682208977309f},
//    {-0.5773502691896258f, -0.5773502691896258f, 0.5773502691896258f},
//    {-0.35682208977309f, -0.9341723589627159f, 0.0f},
//    {-0.5773502691896258f, -0.5773502691896258f, -0.5773502691896258f},
//    {-0.9341723589627159f, 0.0f, -0.35682208977309f},
//    {-0.5773502691896258f, 0.5773502691896258f, -0.5773502691896258f},
//    {-0.35682208977309f, 0.9341723589627159f, 0.0f},
//    {0.35682208977309f, 0.9341723589627159f, 0.0f},
//    {0.5773502691896258f, 0.5773502691896258f, 0.5773502691896258f},
//    {0.9341723589627159f, 0.0f, 0.35682208977309f},
//    {0.5773502691896258f, -0.5773502691896258f, 0.5773502691896258f},
//    {0.35682208977309f, -0.9341723589627159f, 0.0f},
//    {0.5773502691896258f, -0.5773502691896258f, -0.5773502691896258f},
//    {0.0f, -0.35682208977309f, -0.9341723589627159f},
//    {0.0f, 0.35682208977309f, -0.9341723589627159f},
//    {0.5773502691896258f, 0.5773502691896258f, -0.5773502691896258f},
//    {0.9341723589627159f, 0.0f, -0.35682208977309f},

// normalized and rotated so the top face is in a plane
vertex_t const ddh_dodecahedron_vertex_coords[
        DDH_VERTICES_PER_DODECAHEDRON] = {
    {0.491123473188f, -0.356822089773f, 0.794654472292f},
    {0.491123473188f, 0.356822089773f, 0.794654472292f},
    {-0.187592474085f, 0.57735026919f, 0.794654472292f},
    {-0.607061998207f, 0.0f, 0.794654472292f},
    {-0.187592474085f, -0.57735026919f, 0.794654472292f},
    {-0.303530999103f, -0.934172358963f, 0.187592474085f},
    {-0.794654472292f, -0.57735026919f, -0.187592474085f},
    {-0.982246946377f, 0.0f, 0.187592474085f},
    {-0.794654472292f, 0.57735026919f, -0.187592474085f},
    {-0.303530999103f, 0.934172358963f, 0.187592474085f},
    {0.303530999103f, 0.934172358963f, -0.187592474085f},
    {0.794654472292f, 0.57735026919f, 0.187592474085f},
    {0.982246946377f, 0.0f, -0.187592474085f},
    {0.794654472292f, -0.57735026919f, 0.187592474085f},
    {0.303530999103f, -0.934172358963f, -0.187592474085f},
    {0.187592474085f, -0.57735026919f, -0.794654472292f},
    {-0.491123473188f, -0.356822089773f, -0.794654472292f},
    {-0.491123473188f, 0.356822089773f, -0.794654472292f},
    {0.187592474085f, 0.57735026919f, -0.794654472292f},
    {0.607061998207f, 0.0f, -0.794654472292f},
};

vertex_t const ddh_vertex_coords[DDH_TOTAL_VERTICES] = {
    // group 0, dodecahedron 0
    {-0.17189321561594825f, 0.12488773142058149f, -0.27812906530211845f},
    {0.06565736592977783f, 0.2020725942163691f, -0.2781290653021184f},
    {0.2124716993723401f, 1.0022212124938826e-16f, -0.2781290653021184f},
    {0.06565736592977786f, -0.20207259421636897f, -0.27812906530211845f},
    {-0.1718932156159482f, -0.12488773142058152f, -0.27812906530211845f},
    {-0.27812906530211834f, -0.20207259421636914f, -0.0656573659297781f},
    {-0.10623584968617006f, -0.32696032563695054f, 0.06565736592977797f},
    {0.10623584968617013f, -0.32696032563695054f, -0.06565736592977807f},
    {0.2781290653021183f, -0.20207259421636892f, 0.06565736592977803f},
    {0.34378643123189623f, 1.5829634220024981e-16f, -0.06565736592977801f},
    {0.27812906530211834f, 0.20207259421636914f, 0.0656573659297781f},
    {0.10623584968617006f, 0.32696032563695054f, -0.06565736592977797f},
    {-0.10623584968617013f, 0.32696032563695054f, 0.06565736592977807f},
    {-0.2781290653021183f, 0.20207259421636892f, -0.06565736592977803f},
    {-0.34378643123189623f, -1.5829634220024981e-16f, 0.06565736592977801f},
    {-0.2124716993723401f, -1.0022212124938826e-16f, 0.2781290653021184f},
    {-0.06565736592977783f, -0.2020725942163691f, 0.2781290653021184f},
    {0.17189321561594825f, -0.12488773142058149f, 0.27812906530211845f},
    {0.1718932156159482f, 0.12488773142058152f, 0.27812906530211845f},
    {-0.06565736592977786f, 0.20207259421636897f, 0.27812906530211845f},
    // group 0, dodecahedron 1
    {-0.3492051220488627f, 0.20207259421636908f, -0.10119539430315022f},
    {-0.41486248797864067f, -1.3877787807814457e-17f, 0.030119337556405723f},
    {-0.3492051220488628f, -0.20207259421636903f, -0.1011953943031503f},
    {-0.2429692723626926f, -0.12488773142058149f, -0.31366709367549045f},
    {-0.24296927236269272f, 0.1248877314205815f, -0.3136670936754904f},
    {-0.3854996212901284f, 0.20207259421636914f, -0.5037075589120714f},
    {-0.47358822135566586f, 2.7755575615628914e-17f, -0.6211590256661211f},
    {-0.3854996212901284f, -0.20207259421636906f, -0.5037075589120714f},
    {-0.5798240710418359f, -0.32696032563695054f, -0.408687326293781f},
    {-0.5573928369060764f, -0.32696032563695065f, -0.15992112768017525f},
    {-0.751717286657784f, -0.20207259421636914f, -0.06490089506188484f},
    {-0.6636286865922466f, -2.7755575615628914e-17f, 0.05255057169216493f},
    {-0.751717286657784f, 0.20207259421636906f, -0.06490089506188479f},
    {-0.5573928369060765f, 0.32696032563695054f, -0.1599211276801752f},
    {-0.579824071041836f, 0.32696032563695065f, -0.40868732629378096f},
    {-0.7880117858990496f, 0.20207259421636903f, -0.46741305967080593f},
    {-0.7223544199692717f, 1.3877787807814457e-17f, -0.5987277915303619f},
    {-0.7880117858990496f, -0.20207259421636908f, -0.467413059670806f},
    {-0.8942476355852197f, -0.1248877314205815f, -0.2549413602984658f},
    {-0.8942476355852198f, 0.12488773142058149f, -0.25494136029846576f},
    // group 0, dodecahedron 2
    {0.0842721402582679f, 0.39455767255850605f, -0.10119539430315022f},
    {-0.12819955911407233f, 0.39455767255850605f, 0.030119337556405723f},
    {-0.3000927747300204f, 0.2696699411379246f, -0.1011953943031503f},
    {-0.19385692504385027f, 0.19248507834213696f, -0.31366709367549045f},
    {0.04369365650187573f, 0.2696699411379246f, -0.3136670936754904f},
    {0.07305652319038822f, 0.4290757925675812f, -0.5037075589120714f},
    {-0.14634680873470512f, 0.45040916396093755f, -0.6211590256661211f},
    {-0.31130839179790015f, 0.3041880611469997f, -0.5037075589120714f},
    {-0.4901332399666013f, 0.45040916396093755f, -0.408687326293781f},
    {-0.4832016074138482f, 0.4290757925675812f, -0.15992112768017525f},
    {-0.4244758740368234f, 0.6524817581773066f, -0.06490089506188484f},
    {-0.20507254211173004f, 0.6311483867839502f, 0.05255057169216493f},
    {-0.04011095904853504f, 0.7773694895978881f, -0.06490089506188479f},
    {0.13871388912016613f, 0.6311483867839502f, -0.1599211276801752f},
    {0.13178225656741305f, 0.6524817581773066f, -0.40868732629378096f},
    {-0.051326576116414765f, 0.8118876096069632f, -0.46741305967080593f},
    {-0.22321979173236284f, 0.6869998781863818f, -0.5987277915303619f},
    {-0.43569149110470307f, 0.6869998781863818f, -0.467413059670806f},
    {-0.3951130073483109f, 0.8118876096069632f, -0.2549413602984658f},
    {-0.1575624258025849f, 0.8890724724027508f, -0.25494136029846576f},
    // group 0, dodecahedron 3
    {0.4012881690331707f, 0.04177745794683946f, -0.10119539430315022f},
    {0.33563080310339266f, 0.2438500521632085f, 0.030119337556405723f},
    {0.1637375874874446f, 0.36873778358378995f, -0.1011953943031503f},
    {0.12315910373105243f, 0.24385005216320849f, -0.31366709367549045f},
    {0.26997343717361477f, 0.041777457946839514f, -0.31366709367549045f},
    {0.4306510357216833f, 0.06311082934019568f, -0.5037075589120714f},
    {0.3831409194125381f, 0.2783681721722837f, -0.6211590256661211f},
    {0.19310045417595711f, 0.3900711549771463f, -0.5037075589120714f},
    {0.2769050697263679f, 0.6053284978092341f, -0.408687326293781f},
    {0.258757820105735f, 0.5921437491935153f, -0.1599211276801752f},
    {0.4893767690987081f, 0.6053284978092344f, -0.06490089506188479f},
    {0.5368868854078532f, 0.3900711549771463f, 0.05255057169216493f},
    {0.7269273506444343f, 0.2783681721722837f, -0.06490089506188479f},
    {0.6431227350940234f, 0.0631108293401958f, -0.1599211276801752f},
    {0.6612699847146564f, 0.07629557795591463f, -0.408687326293781f},
    {0.7562902173329468f, 0.29970154356564005f, -0.46741305967080593f},
    {0.5843970017169987f, 0.42458927498622145f, -0.5987277915303619f},
    {0.5187396357872207f, 0.6266618692025905f, -0.467413059670806f},
    {0.6500543676467766f, 0.6266618692025905f, -0.25494136029846576f},
    {0.7968687010893389f, 0.4245892749862215f, -0.25494136029846576f},
    // group 0, dodecahedron 4
    {0.16373758748744466f, -0.36873778358378995f, -0.10119539430315022f},
    {0.3356308031033927f, -0.24385005216320843f, 0.030119337556405723f},
    {0.40128816903317066f, -0.04177745794683946f, -0.1011953943031503f},
    {0.26997343717361466f, -0.0417774579468394f, -0.31366709367549045f},
    {0.1231591037310526f, -0.24385005216320846f, -0.3136670936754904f},
    {0.19310045417595711f, -0.39007115497714623f, -0.5037075589120714f},
    {0.38314091941253803f, -0.2783681721722836f, -0.6211590256661211f},
    {0.4306510357216832f, -0.06311082934019563f, -0.5037075589120714f},
    {0.6612699847146561f, -0.07629557795591463f, -0.408687326293781f},
    {0.6431227350940234f, -0.06311082934019563f, -0.15992112768017525f},
    {0.7269273506444343f, -0.27836817217228355f, -0.06490089506188484f},
    {0.5368868854078533f, -0.3900711549771462f, 0.05255057169216493f},
    {0.4893767690987082f, -0.6053284978092341f, -0.06490089506188479f},
    {0.2587578201057352f, -0.5921437491935151f, -0.1599211276801752f},
    {0.27690506972636797f, -0.6053284978092341f, -0.40868732629378096f},
    {0.5187396357872207f, -0.6266618692025903f, -0.46741305967080593f},
    {0.5843970017169987f, -0.42458927498622134f, -0.5987277915303619f},
    {0.7562902173329467f, -0.2997015435656398f, -0.467413059670806f},
    {0.7968687010893387f, -0.42458927498622134f, -0.2549413602984658f},
    {0.6500543676467767f, -0.6266618692025904f, -0.25494136029846576f},
    // group 0, dodecahedron 5
    {-0.3000927747300204f, -0.2696699411379246f, -0.10119539430315017f},
    {-0.12819955911407221f, -0.39455767255850605f, 0.030119337556405723f},
    {0.08427214025826796f, -0.39455767255850605f, -0.10119539430315033f},
    {0.043693656501875816f, -0.2696699411379245f, -0.31366709367549056f},
    {-0.19385692504385033f, -0.19248507834213702f, -0.31366709367549045f},
    {-0.31130839179790015f, -0.30418806114699976f, -0.5037075589120714f},
    {-0.14634680873470512f, -0.4504091639609376f, -0.6211590256661212f},
    {0.07305652319038827f, -0.4290757925675812f, -0.5037075589120715f},
    {0.13178225656741316f, -0.6524817581773066f, -0.40868732629378113f},
    {0.13871388912016636f, -0.6311483867839504f, -0.15992112768017527f},
    {-0.04011095904853476f, -0.7773694895978882f, -0.06490089506188479f},
    {-0.20507254211172982f, -0.6311483867839505f, 0.05255057169216498f},
    {-0.4244758740368232f, -0.6524817581773068f, -0.06490089506188468f},
    {-0.4832016074138481f, -0.42907579256758144f, -0.1599211276801751f},
    {-0.4901332399666013f, -0.45040916396093766f, -0.4086873262937809f},
    {-0.4356914911047029f, -0.686999878186382f, -0.4674130596708059f},
    {-0.22321979173236273f, -0.686999878186382f, -0.5987277915303619f},
    {-0.05132657611641456f, -0.8118876096069634f, -0.46741305967080604f},
    {-0.15756242580258462f, -0.889072472402751f, -0.25494136029846576f},
    {-0.3951130073483108f, -0.8118876096069636f, -0.25494136029846565f},
    // group 1, dodecahedron 0
    {-1.3824004091081767f, 0.7545972251079369f, -1.2028742738776903f},
    {-1.4229788928645688f, 0.8794849565285184f, -1.4153459732500304f},
    {-1.2761645594220064f, 1.0815575507448876f, -1.4153459732500304f},
    {-1.1448498275624504f, 1.0815575507448876f, -1.2028742738776903f},
    {-1.2105071934922287f, 0.8794849565285184f, -1.0715595420181343f},
    {-1.3167430431783986f, 0.956669819324306f, -0.859087842645794f},
    {-1.3167430431783986f, 1.2064452821654692f, -0.8590878426457941f},
    {-1.2105071934922282f, 1.2836301449612566f, -1.0715595420181343f},
    {-1.3824004091081765f, 1.4085178763818382f, -1.2028742738776903f},
    {-1.4229788928645686f, 1.2836301449612568f, -1.4153459732500306f},
    {-1.6605294744102947f, 1.2064452821654692f, -1.4153459732500304f},
    {-1.6605294744102947f, 0.9566698193243061f, -1.4153459732500302f},
    {-1.7667653240964651f, 0.8794849565285184f, -1.20287427387769f},
    {-1.5948721084805169f, 0.7545972251079369f, -1.071559542018134f},
    {-1.5542936247241248f, 0.8794849565285184f, -0.8590878426457937f},
    {-1.701107958166687f, 1.0815575507448876f, -0.859087842645794f},
    {-1.5542936247241246f, 1.2836301449612568f, -0.859087842645794f},
    {-1.5948721084805166f, 1.4085178763818382f, -1.071559542018134f},
    {-1.7667653240964647f, 1.2836301449612568f, -1.20287427387769f},
    {-1.832422690026243f, 1.0815575507448876f, -1.071559542018134f},
    // group 1, dodecahedron 1
    {-1.5729083990526145f, 0.6869998781863813f, -1.036021513644762f},
    {-1.5323299152962226f, 0.8118876096069628f, -0.8235498142724216f},
    {-1.2947793337504965f, 0.8890724724027503f, -0.8235498142724216f},
    {-1.1885434840643263f, 0.8118876096069629f, -1.036021513644762f},
    {-1.3604366996802744f, 0.6869998781863813f, -1.167336245504318f},
    {-1.2835637166826168f, 0.4504091639609371f, -1.1897674796400772f},
    {-1.0641603847575234f, 0.4290757925675809f, -1.0723160128860272f},
    {-1.0054346513804986f, 0.6524817581773061f, -0.9772957802677369f},
    {-0.9985030188277456f, 0.6311483867839498f, -0.7285295816541311f},
    {-1.1773278669964466f, 0.7773694895978877f, -0.6335093490358407f},
    {-1.3422894500596416f, 0.6311483867839498f, -0.5160578822817907f},
    {-1.561692781984735f, 0.652481758177306f, -0.6335093490358408f},
    {-1.6204185153617598f, 0.42907579256758077f, -0.7285295816541311f},
    {-1.627350147914513f, 0.4504091639609371f, -0.9772957802677369f},
    {-1.4485252997458118f, 0.30418806114699926f, -1.0723160128860274f},
    {-1.331073832991762f, 0.19248507834213657f, -0.8822755476494464f},
    {-1.0935232514460358f, 0.2696699411379241f, -0.8822755476494464f},
    {-1.052944767689644f, 0.39455767255850555f, -0.669803848277106f},
    {-1.265416467061984f, 0.39455767255850555f, -0.5384891164175502f},
    {-1.4373096826779321f, 0.26966994113792403f, -0.669803848277106f},
    // group 1, dodecahedron 2
    {-1.6824931838381971f, 0.8890724724027506f, -1.4508840016234026f},
    {-1.7887290335243673f, 0.811887609606963f, -1.2384123022510622f},
    {-1.616835817908419f, 0.6869998781863814f, -1.1070975703915065f},
    {-1.404364118536079f, 0.6869998781863814f, -1.2384123022510622f},
    {-1.444942602292471f, 0.8118876096069629f, -1.4508840016234026f},
    {-1.4155797356039586f, 0.6524817581773062f, -1.6409244668599838f},
    {-1.3568540022269338f, 0.4290757925675808f, -1.545904234241693f},
    {-1.3499223696741804f, 0.45040916396093705f, -1.2971380356280873f},
    {-1.5287472178428818f, 0.3041880611469993f, -1.2021178030097968f},
    {-1.6937088009060768f, 0.4504091639609371f, -1.0846663362557467f},
    {-1.9131121328311702f, 0.4290757925675809f, -1.2021178030097965f},
    {-1.971837866208195f, 0.6524817581773062f, -1.2971380356280873f},
    {-1.9787694987609483f, 0.63114838678395f, -1.545904234241693f},
    {-1.799944650592247f, 0.7773694895978878f, -1.6409244668599836f},
    {-1.634983067529052f, 0.63114838678395f, -1.7583759336140337f},
    {-1.7118560505267097f, 0.3945576725585057f, -1.735944699478274f},
    {-1.5399628349107615f, 0.2696699411379241f, -1.6046299676187181f},
    {-1.6461986845969316f, 0.19248507834213652f, -1.3921582682463778f},
    {-1.8837492661426578f, 0.2696699411379242f, -1.3921582682463778f},
    {-1.9243277498990499f, 0.3945576725585057f, -1.6046299676187181f},
    // group 1, dodecahedron 3
    {-1.4229788928645688f, 1.2836301449612566f, -1.4948114204792073f},
    {-1.6605294744102947f, 1.2064452821654692f, -1.4948114204792073f},
    {-1.6605294744102947f, 0.9566698193243061f, -1.4948114204792073f},
    {-1.4229788928645688f, 0.8794849565285184f, -1.4948114204792073f},
    {-1.2761645594220066f, 1.0815575507448876f, -1.4948114204792073f},
    {-1.1448498275624506f, 1.0815575507448876f, -1.707283119851548f},
    {-1.2105071934922287f, 0.8794849565285184f, -1.838597851711104f},
    {-1.3824004091081767f, 0.7545972251079369f, -1.7072831198515477f},
    {-1.5948721084805169f, 0.754597225107937f, -1.8385978517111037f},
    {-1.766765324096465f, 0.8794849565285185f, -1.7072831198515477f},
    {-1.8324226900262428f, 1.0815575507448876f, -1.8385978517111037f},
    {-1.7667653240964647f, 1.2836301449612568f, -1.7072831198515477f},
    {-1.5948721084805166f, 1.4085178763818382f, -1.838597851711104f},
    {-1.3824004091081765f, 1.408517876381838f, -1.707283119851548f},
    {-1.2105071934922285f, 1.2836301449612566f, -1.838597851711104f},
    {-1.3167430431783986f, 1.206445282165469f, -2.0510695510834442f},
    {-1.3167430431783986f, 0.956669819324306f, -2.0510695510834442f},
    {-1.5542936247241246f, 0.8794849565285184f, -2.0510695510834442f},
    {-1.7011079581666868f, 1.0815575507448876f, -2.0510695510834442f},
    {-1.5542936247241246f, 1.2836301449612568f, -2.0510695510834442f},
    // group 1, dodecahedron 4
    {-1.153005455690954f, 1.3254076029080961f, -1.1070975703915067f},
    {-1.3248986713069018f, 1.4502953343286775f, -1.2384123022510627f},
    {-1.365477155063294f, 1.3254076029080961f, -1.4508840016234028f},
    {-1.218662821620732f, 1.123335008691727f, -1.4508840016234028f},
    {-1.087348089761176f, 1.123335008691727f, -1.2384123022510627f},
    {-0.8455135237003232f, 1.1446683800850832f, -1.2971380356280877f},
    {-0.8273662740796903f, 1.1578531287008023f, -1.5459042342416935f},
    {-1.0579852230726634f, 1.1446683800850832f, -1.640924466859984f},
    {-1.1054953393818083f, 1.3599257229171713f, -1.7583759336140337f},
    {-1.2955358046183894f, 1.4716287057220339f, -1.6409244668599838f},
    {-1.2117311890679785f, 1.686886048554122f, -1.5459042342416935f},
    {-1.2298784386886112f, 1.6737012999384029f, -1.2971380356280877f},
    {-0.9992594896956382f, 1.686886048554122f, -1.2021178030097972f},
    {-0.9517493733864931f, 1.4716287057220339f, -1.0846663362557476f},
    {-0.7617089081499122f, 1.3599257229171713f, -1.2021178030097974f},
    {-0.6917675577050076f, 1.506146825731109f, -1.3921582682463784f},
    {-0.7323460414613997f, 1.3812590943105276f, -1.6046299676187186f},
    {-0.9042392570773478f, 1.506146825731109f, -1.7359446994782746f},
    {-0.9698966230071256f, 1.708219419947478f, -1.6046299676187186f},
    {-0.8385818911475696f, 1.708219419947478f, -1.3921582682463784f},
    // group 1, dodecahedron 5
    {-1.245666986431654f, 0.9566698193243062f, -0.8235498142724217f},
    {-1.245666986431654f, 1.206445282165469f, -0.8235498142724218f},
    {-1.139431136745484f, 1.2836301449612566f, -1.0360215136447621f},
    {-1.073773770815706f, 1.0815575507448876f, -1.167336245504318f},
    {-1.139431136745484f, 0.8794849565285185f, -1.036021513644762f},
    {-0.9312434218882703f, 0.754597225107937f, -0.977295780267737f},
    {-0.7369189721365628f, 0.8794849565285185f, -1.0723160128860276f},
    {-0.8250075722021001f, 1.0815575507448876f, -1.1897674796400775f},
    {-0.7369189721365625f, 1.2836301449612566f, -1.0723160128860276f},
    {-0.9312434218882701f, 1.408517876381838f, -0.9772957802677372f},
    {-0.9088121877525107f, 1.408517876381838f, -0.7285295816541314f},
    {-1.1031366375042182f, 1.2836301449612566f, -0.6335093490358409f},
    {-1.015048037438681f, 1.0815575507448876f, -0.516057882281791f},
    {-1.1031366375042184f, 0.8794849565285187f, -0.6335093490358408f},
    {-0.9088121877525108f, 0.754597225107937f, -0.7285295816541312f},
    {-0.7006244728952971f, 0.8794849565285185f, -0.6698038482771063f},
    {-0.5943886232091269f, 0.9566698193243061f, -0.8822755476494466f},
    {-0.5943886232091269f, 1.206445282165469f, -0.8822755476494467f},
    {-0.7006244728952971f, 1.2836301449612566f, -0.6698038482771065f},
    {-0.766281838825075f, 1.0815575507448876f, -0.5384891164175504f},
    // group 2, dodecahedron 0
    {0.29047938867183776f, 1.5479242836779479f, -1.20287427387769f},
    {0.3967152383580079f, 1.6251091464737355f, -1.4153459732500304f},
    {0.6342658199037341f, 1.547924283677948f, -1.4153459732500304f},
    {0.6748443036601263f, 1.4230365522573665f, -1.2028742738776903f},
    {0.4623726042877859f, 1.4230365522573665f, -1.0715595420181343f},
    {0.5029510880441781f, 1.5479242836779479f, -0.859087842645794f},
    {0.7405016695899044f, 1.6251091464737355f, -0.8590878426457941f},
    {0.8467375192760745f, 1.547924283677948f, -1.0715595420181343f},
    {0.9123948852058525f, 1.7499968778943171f, -1.2028742738776903f},
    {0.7810801533462965f, 1.7499968778943171f, -1.4153459732500306f},
    {0.6342658199037343f, 1.9520694721106864f, -1.4153459732500304f},
    {0.39671523835800804f, 1.8748846093148988f, -1.4153459732500302f},
    {0.29047938867183787f, 1.9520694721106862f, -1.20287427387769f},
    {0.22482202274205987f, 1.7499968778943171f, -1.071559542018134f},
    {0.35613675460161587f, 1.7499968778943171f, -0.8590878426457937f},
    {0.5029510880441783f, 1.9520694721106862f, -0.859087842645794f},
    {0.7405016695899045f, 1.8748846093148988f, -0.859087842645794f},
    {0.8467375192760747f, 1.9520694721106864f, -1.0715595420181343f},
    {0.6748443036601265f, 2.0769572035312676f, -1.20287427387769f},
    {0.46237260428778615f, 2.076957203531268f, -1.071559542018134f},
    // group 2, dodecahedron 1
    {0.16732028494078544f, 1.7082194199474778f, -1.036021513644762f},
    {0.29863501680034144f, 1.7082194199474778f, -0.8235498142724216f},
    {0.44544935024290366f, 1.5061468257311088f, -0.8235498142724217f},
    {0.4048708664865115f, 1.3812590943105272f, -1.0360215136447621f},
    {0.23297765087056338f, 1.5061468257311088f, -1.167336245504318f},
    {0.031721568566102615f, 1.359925722917171f, -1.1897674796400772f},
    {0.07923168487524776f, 1.1446683800850832f, -1.0723160128860274f},
    {0.30985063386822087f, 1.1578531287008018f, -0.9772957802677371f},
    {0.291703384247588f, 1.144668380085083f, -0.7285295816541312f},
    {0.3755079997979989f, 1.359925722917171f, -0.6335093490358407f},
    {0.18546753456141798f, 1.4716287057220336f, -0.5160578822817906f},
    {0.13795741825227284f, 1.6868860485541215f, -0.6335093490358406f},
    {-0.0926615307407003f, 1.6737012999384029f, -0.7285295816541308f},
    {-0.07451428112006742f, 1.6868860485541217f, -0.9772957802677368f},
    {-0.15831889667047833f, 1.4716287057220336f, -1.0723160128860274f},
    {-0.22826024711538306f, 1.325407602908096f, -0.8822755476494463f},
    {-0.08144591367282084f, 1.1233350086917269f, -0.8822755476494464f},
    {0.049868818186735164f, 1.1233350086917269f, -0.669803848277106f},
    {-0.01578854774304278f, 1.325407602908096f, -0.53848911641755f},
    {-0.1876817633589909f, 1.4502953343286775f, -0.6698038482771059f},
    // group 2, dodecahedron 2
    {0.3256391816112635f, 1.8748846093148985f, -1.4508840016234026f},
    {0.21940333192509337f, 1.9520694721106862f, -1.2384123022510625f},
    {0.1537459659953153f, 1.7499968778943171f, -1.1070975703915065f},
    {0.21940333192509326f, 1.547924283677948f, -1.2384123022510622f},
    {0.3256391816112634f, 1.6251091464737357f, -1.4508840016234026f},
    {0.1831088326838276f, 1.547924283677948f, -1.6409244668599836f},
    {-0.011215617067880025f, 1.4230365522573667f, -1.545904234241693f},
    {0.011215617067879415f, 1.4230365522573667f, -1.2971380356280873f},
    {-0.18310883268382808f, 1.5479242836779483f, -1.2021178030097968f},
    {-0.09502023261829064f, 1.7499968778943171f, -1.084666336255747f},
    {-0.18310883268382805f, 1.9520694721106862f, -1.2021178030097968f},
    {0.011215617067879581f, 2.0769572035312676f, -1.2971380356280873f},
    {-0.011215617067879859f, 2.0769572035312676f, -1.545904234241693f},
    {0.18310883268382763f, 1.952069472110686f, -1.6409244668599836f},
    {0.09502023261829019f, 1.7499968778943171f, -1.7583759336140334f},
    {-0.15374596599531573f, 1.7499968778943171f, -1.735944699478274f},
    {-0.21940333192509381f, 1.547924283677948f, -1.604629967618718f},
    {-0.32563918161126393f, 1.6251091464737357f, -1.3921582682463778f},
    {-0.3256391816112638f, 1.8748846093148985f, -1.3921582682463778f},
    {-0.2194033319250937f, 1.9520694721106862f, -1.6046299676187181f},
    // group 2, dodecahedron 3
    {0.7810801533462965f, 1.7499968778943171f, -1.4948114204792073f},
    {0.6342658199037342f, 1.9520694721106862f, -1.4948114204792073f},
    {0.3967152383580081f, 1.8748846093148985f, -1.4948114204792073f},
    {0.39671523835800804f, 1.6251091464737357f, -1.4948114204792073f},
    {0.6342658199037342f, 1.547924283677948f, -1.4948114204792073f},
    {0.6748443036601264f, 1.4230365522573667f, -1.707283119851548f},
    {0.46237260428778604f, 1.4230365522573667f, -1.838597851711104f},
    {0.29047938867183787f, 1.547924283677948f, -1.7072831198515477f},
    {0.22482202274205998f, 1.7499968778943171f, -1.8385978517111037f},
    {0.29047938867183787f, 1.9520694721106862f, -1.7072831198515477f},
    {0.46237260428778604f, 2.0769572035312676f, -1.8385978517111037f},
    {0.6748443036601264f, 2.0769572035312676f, -1.7072831198515477f},
    {0.8467375192760745f, 1.9520694721106862f, -1.838597851711104f},
    {0.9123948852058524f, 1.7499968778943171f, -1.707283119851548f},
    {0.8467375192760745f, 1.547924283677948f, -1.838597851711104f},
    {0.7405016695899043f, 1.6251091464737357f, -2.0510695510834442f},
    {0.5029510880441782f, 1.547924283677948f, -2.0510695510834442f},
    {0.35613675460161587f, 1.7499968778943171f, -2.0510695510834442f},
    {0.5029510880441782f, 1.9520694721106862f, -2.0510695510834442f},
    {0.7405016695899044f, 1.8748846093148985f, -2.0510695510834442f},
    // group 2, dodecahedron 4
    {0.9042392570773491f, 1.5061468257311086f, -1.1070975703915067f},
    {0.9698966230071271f, 1.7082194199474776f, -1.2384123022510627f},
    {0.8385818911475711f, 1.7082194199474776f, -1.4508840016234028f},
    {0.6917675577050088f, 1.5061468257311086f, -1.4508840016234028f},
    {0.732346041461401f, 1.3812590943105272f, -1.2384123022510627f},
    {0.8273662740796914f, 1.1578531287008018f, -1.2971380356280877f},
    {0.8455135237003244f, 1.144668380085083f, -1.5459042342416935f},
    {0.7617089081499134f, 1.3599257229171708f, -1.6409244668599838f},
    {0.9517493733864945f, 1.4716287057220334f, -1.7583759336140337f},
    {0.9992594896956396f, 1.6868860485541215f, -1.640924466859984f},
    {1.2298784386886128f, 1.6737012999384024f, -1.5459042342416935f},
    {1.2117311890679798f, 1.6868860485541213f, -1.2971380356280877f},
    {1.2955358046183907f, 1.4716287057220334f, -1.2021178030097974f},
    {1.1054953393818097f, 1.3599257229171708f, -1.0846663362557476f},
    {1.0579852230726645f, 1.1446683800850828f, -1.2021178030097972f},
    {1.2186628216207331f, 1.1233350086917266f, -1.3921582682463784f},
    {1.0873480897611771f, 1.1233350086917266f, -1.6046299676187186f},
    {1.153005455690955f, 1.3254076029080957f, -1.7359446994782746f},
    {1.324898671306903f, 1.450295334328677f, -1.6046299676187186f},
    {1.3654771550632954f, 1.3254076029080957f, -1.3921582682463784f},
    // group 2, dodecahedron 5
    {0.5249147974720805f, 1.4803269367563927f, -0.8235498142724217f},
    {0.7624653790178066f, 1.55751179955218f, -0.8235498142724218f},
    {0.8687012287039767f, 1.4803269367563925f, -1.0360215136447621f},
    {0.6968080130880285f, 1.355439205335811f, -1.167336245504318f},
    {0.4843363137156883f, 1.355439205335811f, -1.036021513644762f},
    {0.4298945648537899f, 1.1188484911103669f, -0.977295780267737f},
    {0.6087194130224913f, 0.9726273882964289f, -1.0723160128860276f},
    {0.7736809960856863f, 1.1188484911103667f, -1.1897674796400775f},
    {0.9930843280107797f, 1.0975151197170103f, -1.0723160128860276f},
    {1.0518100613878048f, 1.3209210853267357f, -0.9772957802677372f},
    {1.0587416939405578f, 1.2995877139333794f, -0.7285295816541314f},
    {0.8799168457718565f, 1.4458088167473173f, -0.6335093490358409f},
    {0.7149552627086615f, 1.2995877139333796f, -0.516057882281791f},
    {0.4955519307835681f, 1.320921085326736f, -0.6335093490358408f},
    {0.4368261974065431f, 1.0975151197170105f, -0.7285295816541312f},
    {0.6199350300903711f, 0.9381092682873537f, -0.6698038482771063f},
    {0.7261708797765412f, 0.8609244054915661f, -0.8822755476494466f},
    {0.9637214613222673f, 0.9381092682873536f, -0.8822755476494467f},
    {1.0042999450786594f, 1.0629969997079352f, -0.6698038482771065f},
    {0.7918282457063193f, 1.0629969997079352f, -0.5384891164175504f},
    // group 3, dodecahedron 0
    {1.561926544338663f, 0.2020725942163691f, -1.2028742738776903f},
    {1.6681623940248331f, 0.1248877314205816f, -1.4153459732500309f},
    {1.6681623940248331f, -0.12488773142058174f, -1.4153459732500306f},
    {1.561926544338663f, -0.20207259421636956f, -1.20287427387769f},
    {1.496269178408885f, -3.2411613045377797e-16f, -1.0715595420181339f},
    {1.6275839102684413f, -2.258017185432303e-16f, -0.8590878426457933f},
    {1.774398243711004f, -0.20207259421636942f, -0.8590878426457935f},
    {1.7338197599546117f, -0.32696032563695115f, -1.0715595420181339f},
    {1.9462914593269522f, -0.3269603256369508f, -1.2028742738776903f},
    {1.9057129755705597f, -0.20207259421636925f, -1.4153459732500309f},
    {2.052527309013122f, 2.258017185432303e-16f, -1.415345973250031f},
    {1.9057129755705597f, 0.20207259421636942f, -1.4153459732500309f},
    {1.946291459326952f, 0.32696032563695115f, -1.2028742738776905f},
    {1.7338197599546115f, 0.3269603256369508f, -1.071559542018134f},
    {1.774398243711004f, 0.20207259421636925f, -0.8590878426457935f},
    {2.0119488252567304f, 0.12488773142058174f, -0.8590878426457936f},
    {2.011948825256731f, -0.1248877314205816f, -0.8590878426457935f},
    {2.118184674942901f, -0.2020725942163691f, -1.071559542018134f},
    {2.183842040872679f, 3.2411613045377797e-16f, -1.2028742738776905f},
    {2.1181846749429005f, 0.20207259421636956f, -1.0715595420181343f},
    // group 3, dodecahedron 1
    {1.6763180221533371f, 0.36873778358378995f, -1.036021513644762f},
    {1.7168965059097292f, 0.24385005216320843f, -0.8235498142724217f},
    {1.5700821724671667f, 0.04177745794683946f, -0.8235498142724218f},
    {1.4387674406076107f, 0.04177745794683946f, -1.0360215136447621f},
    {1.5044248065373889f, 0.2438500521632085f, -1.167336245504318f},
    {1.3031687242329284f, 0.39007115497714645f, -1.1897674796400772f},
    {1.1131282589963474f, 0.27836817217228393f, -1.0723160128860274f},
    {1.196932874546758f, 0.06311082934019585f, -0.9772957802677371f},
    {1.1787856249261253f, 0.07629557795591485f, -0.7285295816541313f},
    {1.4094045739190983f, 0.0631108293401958f, -0.6335093490358408f},
    {1.4569146902282435f, 0.27836817217228377f, -0.5160578822817907f},
    {1.6469551554648245f, 0.3900711549771463f, -0.6335093490358406f},
    {1.5631505399144139f, 0.6053284978092344f, -0.7285295816541308f},
    {1.5812977895350466f, 0.5921437491935153f, -0.9772957802677367f},
    {1.3506788405420735f, 0.6053284978092344f, -1.0723160128860272f},
    {1.1900012419940051f, 0.6266618692025907f, -0.8822755476494462f},
    {1.0431869085514427f, 0.4245892749862218f, -0.8822755476494463f},
    {1.0837653923078348f, 0.29970154356564027f, -0.669803848277106f},
    {1.255658607923783f, 0.4245892749862217f, -0.53848911641755f},
    {1.3213159738535611f, 0.6266618692025907f, -0.6698038482771058f},
    // group 3, dodecahedron 2
    {1.8837492661426576f, 0.26966994113792464f, -1.4508840016234026f},
    {1.9243277498990496f, 0.3945576725585062f, -1.2384123022510622f},
    {1.7118560505267093f, 0.39455767255850627f, -1.1070975703915065f},
    {1.5399628349107612f, 0.2696699411379247f, -1.2384123022510622f},
    {1.6461986845969314f, 0.19248507834213718f, -1.4508840016234026f},
    {1.5287472178428816f, 0.3041880611469998f, -1.6409244668599838f},
    {1.3499223696741804f, 0.4504091639609378f, -1.545904234241693f},
    {1.3568540022269335f, 0.42907579256758144f, -1.2971380356280873f},
    {1.4155797356039583f, 0.6524817581773068f, -1.2021178030097968f},
    {1.6349830675290518f, 0.6311483867839506f, -1.0846663362557467f},
    {1.7999446505922467f, 0.7773694895978884f, -1.2021178030097965f},
    {1.9787694987609479f, 0.6311483867839505f, -1.2971380356280873f},
    {1.9718378662081948f, 0.6524817581773068f, -1.545904234241693f},
    {1.91311213283117f, 0.42907579256758144f, -1.6409244668599836f},
    {1.6937088009060766f, 0.45040916396093766f, -1.7583759336140337f},
    {1.616835817908419f, 0.686999878186382f, -1.735944699478274f},
    {1.4043641185360787f, 0.686999878186382f, -1.6046299676187181f},
    {1.4449426022924707f, 0.8118876096069636f, -1.3921582682463778f},
    {1.682493183838197f, 0.889072472402751f, -1.3921582682463778f},
    {1.788729033524367f, 0.8118876096069636f, -1.6046299676187181f},
    // group 3, dodecahedron 3
    {1.9057129755705597f, -0.2020725942163691f, -1.4948114204792073f},
    {2.052527309013122f, -5.382038192050906e-17f, -1.4948114204792073f},
    {1.9057129755705597f, 0.20207259421636903f, -1.4948114204792073f},
    {1.6681623940248338f, 0.12488773142058156f, -1.4948114204792073f},
    {1.6681623940248338f, -0.12488773142058146f, -1.4948114204792076f},
    {1.5619265443386636f, -0.20207259421636906f, -1.707283119851548f},
    {1.4962691784088857f, 8.286759035527956e-17f, -1.838597851711104f},
    {1.5619265443386636f, 0.20207259421636917f, -1.7072831198515477f},
    {1.7338197599546117f, 0.32696032563695054f, -1.8385978517111037f},
    {1.946291459326952f, 0.3269603256369506f, -1.7072831198515477f},
    {2.1181846749429f, 0.20207259421636906f, -1.8385978517111037f},
    {2.183842040872678f, -8.286759035527956e-17f, -1.7072831198515477f},
    {2.1181846749429f, -0.20207259421636917f, -1.838597851711104f},
    {1.946291459326952f, -0.32696032563695054f, -1.707283119851548f},
    {1.7338197599546117f, -0.3269603256369506f, -1.838597851711104f},
    {1.774398243711004f, -0.20207259421636903f, -2.0510695510834442f},
    {1.6275839102684415f, 5.382038192050906e-17f, -2.0510695510834442f},
    {1.774398243711004f, 0.2020725942163691f, -2.0510695510834442f},
    {2.01194882525673f, 0.12488773142058146f, -2.0510695510834442f},
    {2.01194882525673f, -0.12488773142058156f, -2.0510695510834442f},
    // group 3, dodecahedron 4
    {1.7118560505267095f, -0.39455767255850616f, -1.1070975703915067f},
    {1.9243277498990499f, -0.3945576725585062f, -1.2384123022510627f},
    {1.8837492661426576f, -0.2696699411379247f, -1.4508840016234028f},
    {1.6461986845969314f, -0.19248507834213702f, -1.4508840016234028f},
    {1.5399628349107615f, -0.26966994113792464f, -1.2384123022510627f},
    {1.3568540022269335f, -0.4290757925675813f, -1.2971380356280877f},
    {1.3499223696741804f, -0.45040916396093766f, -1.5459042342416935f},
    {1.5287472178428816f, -0.3041880611469998f, -1.6409244668599838f},
    {1.6937088009060766f, -0.4504091639609378f, -1.7583759336140337f},
    {1.91311213283117f, -0.42907579256758144f, -1.6409244668599838f},
    {1.9718378662081948f, -0.6524817581773069f, -1.5459042342416935f},
    {1.9787694987609479f, -0.6311483867839506f, -1.2971380356280877f},
    {1.7999446505922467f, -0.7773694895978884f, -1.2021178030097974f},
    {1.6349830675290518f, -0.6311483867839505f, -1.0846663362557476f},
    {1.4155797356039583f, -0.6524817581773068f, -1.2021178030097974f},
    {1.4449426022924707f, -0.8118876096069636f, -1.3921582682463784f},
    {1.4043641185360785f, -0.686999878186382f, -1.6046299676187186f},
    {1.6168358179084188f, -0.6869998781863821f, -1.7359446994782746f},
    {1.7887290335243669f, -0.8118876096069636f, -1.6046299676187186f},
    {1.682493183838197f, -0.8890724724027512f, -1.3921582682463784f},
    // group 3, dodecahedron 5
    {1.5700821724671672f, -0.0417774579468394f, -0.8235498142724217f},
    {1.7168965059097294f, -0.24385005216320854f, -0.8235498142724218f},
    {1.6763180221533371f, -0.36873778358379006f, -1.0360215136447621f},
    {1.504424806537389f, -0.24385005216320849f, -1.167336245504318f},
    {1.4387674406076112f, -0.0417774579468394f, -1.036021513644762f},
    {1.1969328745467585f, -0.06311082934019552f, -0.977295780267737f},
    {1.1131282589963476f, -0.27836817217228366f, -1.0723160128860274f},
    {1.3031687242329284f, -0.39007115497714634f, -1.1897674796400775f},
    {1.3506788405420735f, -0.6053284978092344f, -1.0723160128860276f},
    {1.5812977895350468f, -0.5921437491935155f, -0.9772957802677372f},
    {1.5631505399144139f, -0.6053284978092345f, -0.7285295816541314f},
    {1.6469551554648247f, -0.39007115497714634f, -0.6335093490358409f},
    {1.456914690228244f, -0.27836817217228366f, -0.516057882281791f},
    {1.4094045739190988f, -0.06311082934019568f, -0.6335093490358408f},
    {1.1787856249261255f, -0.07629557795591446f, -0.7285295816541312f},
    {1.0837653923078352f, -0.29970154356563994f, -0.6698038482771063f},
    {1.043186908551443f, -0.42458927498622145f, -0.8822755476494466f},
    {1.1900012419940051f, -0.6266618692025906f, -0.8822755476494467f},
    {1.3213159738535611f, -0.6266618692025906f, -0.6698038482771065f},
    {1.2556586079237833f, -0.4245892749862215f, -0.5384891164175504f},
    // group 4, dodecahedron 0
    {0.4623726042877858f, -1.4230365522573667f, -1.0715595420181343f},
    {0.674844303660126f, -1.4230365522573667f, -1.20287427387769f},
    {0.6342658199037339f, -1.547924283677948f, -1.4153459732500304f},
    {0.3967152383580078f, -1.6251091464737357f, -1.4153459732500306f},
    {0.2904793886718377f, -1.547924283677948f, -1.2028742738776903f},
    {0.2248220227420597f, -1.7499968778943171f, -1.0715595420181343f},
    {0.2904793886718378f, -1.9520694721106862f, -1.2028742738776903f},
    {0.3967152383580078f, -1.8748846093148988f, -1.4153459732500306f},
    {0.634265819903734f, -1.9520694721106862f, -1.4153459732500304f},
    {0.7810801533462963f, -1.7499968778943171f, -1.4153459732500304f},
    {0.9123948852058523f, -1.7499968778943171f, -1.20287427387769f},
    {0.8467375192760742f, -1.547924283677948f, -1.071559542018134f},
    {0.7405016695899042f, -1.6251091464737355f, -0.8590878426457937f},
    {0.502951088044178f, -1.547924283677948f, -0.859087842645794f},
    {0.3561367546016157f, -1.7499968778943171f, -0.859087842645794f},
    {0.5029510880441781f, -1.9520694721106862f, -0.859087842645794f},
    {0.4623726042877859f, -2.0769572035312676f, -1.0715595420181343f},
    {0.6748443036601262f, -2.0769572035312676f, -1.20287427387769f},
    {0.8467375192760742f, -1.9520694721106862f, -1.071559542018134f},
    {0.7405016695899042f, -1.8748846093148985f, -0.8590878426457937f},
    // group 4, dodecahedron 1
    {0.4454493502429036f, -1.5061468257311084f, -0.8235498142724216f},
    {0.2986350168003413f, -1.7082194199474774f, -0.8235498142724216f},
    {0.16732028494078527f, -1.7082194199474774f, -1.036021513644762f},
    {0.23297765087056327f, -1.5061468257311086f, -1.167336245504318f},
    {0.4048708664865114f, -1.381259094310527f, -1.036021513644762f},
    {0.309850633868221f, -1.1578531287008016f, -0.9772957802677371f},
    {0.07923168487524779f, -1.1446683800850828f, -1.0723160128860276f},
    {0.03172156856610256f, -1.3599257229171706f, -1.1897674796400775f},
    {-0.15831889667047833f, -1.4716287057220332f, -1.0723160128860274f},
    {-0.07451428112006755f, -1.6868860485541213f, -0.977295780267737f},
    {-0.09266153074070035f, -1.6737012999384022f, -0.7285295816541311f},
    {0.1379574182522728f, -1.686886048554121f, -0.6335093490358407f},
    {0.18546753456141804f, -1.4716287057220332f, -0.5160578822817907f},
    {0.3755079997979989f, -1.3599257229171706f, -0.6335093490358408f},
    {0.2917033842475881f, -1.1446683800850825f, -0.7285295816541312f},
    {0.04986881818673533f, -1.1233350086917264f, -0.6698038482771063f},
    {-0.08144591367282072f, -1.1233350086917264f, -0.8822755476494466f},
    {-0.228260247115383f, -1.3254076029080955f, -0.8822755476494466f},
    {-0.18768176335899078f, -1.4502953343286769f, -0.6698038482771063f},
    {-0.01578854774304267f, -1.3254076029080952f, -0.5384891164175503f},
    // group 4, dodecahedron 2
    {0.8687012287039766f, -1.4803269367563925f, -1.036021513644762f},
    {0.7624653790178065f, -1.55751179955218f, -0.8235498142724216f},
    {0.5249147974720805f, -1.4803269367563925f, -0.8235498142724216f},
    {0.4843363137156882f, -1.355439205335811f, -1.036021513644762f},
    {0.6968080130880284f, -1.355439205335811f, -1.167336245504318f},
    {0.7736809960856861f, -1.1188484911103667f, -1.1897674796400772f},
    {0.6087194130224911f, -0.972627388296429f, -1.0723160128860272f},
    {0.42989456485378996f, -1.1188484911103669f, -0.9772957802677369f},
    {0.43682619740654327f, -1.0975151197170105f, -0.7285295816541311f},
    {0.4955519307835681f, -1.320921085326736f, -0.6335093490358407f},
    {0.7149552627086615f, -1.2995877139333796f, -0.5160578822817907f},
    {0.8799168457718565f, -1.4458088167473173f, -0.6335093490358407f},
    {1.0587416939405576f, -1.2995877139333794f, -0.7285295816541311f},
    {1.0518100613878043f, -1.3209210853267357f, -0.9772957802677369f},
    {0.9930843280107795f, -1.0975151197170103f, -1.0723160128860274f},
    {0.9637214613222671f, -0.9381092682873537f, -0.8822755476494464f},
    {0.726170879776541f, -0.8609244054915661f, -0.8822755476494464f},
    {0.619935030090371f, -0.9381092682873537f, -0.669803848277106f},
    {0.7918282457063192f, -1.0629969997079352f, -0.5384891164175502f},
    {1.0042999450786594f, -1.0629969997079352f, -0.669803848277106f},
    // group 4, dodecahedron 3
    {0.8385818911475706f, -1.7082194199474776f, -1.4508840016234026f},
    {0.9698966230071266f, -1.7082194199474776f, -1.2384123022510622f},
    {0.9042392570773488f, -1.5061468257311084f, -1.1070975703915065f},
    {0.7323460414614005f, -1.381259094310527f, -1.2384123022510625f},
    {0.6917675577050084f, -1.5061468257311086f, -1.4508840016234028f},
    {0.7617089081499131f, -1.3599257229171706f, -1.6409244668599838f},
    {0.845513523700324f, -1.1446683800850828f, -1.545904234241693f},
    {0.8273662740796911f, -1.1578531287008014f, -1.2971380356280873f},
    {1.057985223072664f, -1.1446683800850825f, -1.2021178030097968f},
    {1.1054953393818094f, -1.3599257229171704f, -1.0846663362557467f},
    {1.2955358046183902f, -1.4716287057220332f, -1.2021178030097965f},
    {1.2117311890679794f, -1.686886048554121f, -1.2971380356280873f},
    {1.2298784386886124f, -1.6737012999384024f, -1.545904234241693f},
    {0.9992594896956392f, -1.6868860485541213f, -1.6409244668599836f},
    {0.951749373386494f, -1.4716287057220334f, -1.7583759336140337f},
    {1.1530054556909546f, -1.3254076029080955f, -1.735944699478274f},
    {1.0873480897611767f, -1.1233350086917262f, -1.6046299676187181f},
    {1.2186628216207327f, -1.1233350086917262f, -1.3921582682463778f},
    {1.365477155063295f, -1.3254076029080952f, -1.3921582682463776f},
    {1.3248986713069029f, -1.4502953343286769f, -1.604629967618718f},
    // group 4, dodecahedron 4
    {0.3967152383580079f, -1.8748846093148988f, -1.4948114204792071f},
    {0.6342658199037341f, -1.9520694721106862f, -1.494811420479207f},
    {0.7810801533462963f, -1.7499968778943171f, -1.494811420479207f},
    {0.634265819903734f, -1.547924283677948f, -1.494811420479207f},
    {0.3967152383580079f, -1.6251091464737357f, -1.4948114204792071f},
    {0.29047938867183765f, -1.547924283677948f, -1.7072831198515475f},
    {0.4623726042877858f, -1.4230365522573667f, -1.8385978517111037f},
    {0.6748443036601262f, -1.4230365522573665f, -1.7072831198515475f},
    {0.8467375192760742f, -1.5479242836779479f, -1.8385978517111035f},
    {0.9123948852058523f, -1.7499968778943171f, -1.7072831198515475f},
    {0.8467375192760743f, -1.9520694721106862f, -1.8385978517111037f},
    {0.6748443036601262f, -2.0769572035312676f, -1.7072831198515475f},
    {0.4623726042877858f, -2.0769572035312676f, -1.8385978517111037f},
    {0.29047938867183776f, -1.9520694721106864f, -1.7072831198515477f},
    {0.22482202274205965f, -1.7499968778943171f, -1.8385978517111037f},
    {0.3561367546016157f, -1.7499968778943171f, -2.0510695510834442f},
    {0.5029510880441779f, -1.547924283677948f, -2.0510695510834442f},
    {0.740501669589904f, -1.6251091464737355f, -2.0510695510834442f},
    {0.740501669589904f, -1.8748846093148985f, -2.0510695510834442f},
    {0.502951088044178f, -1.9520694721106862f, -2.0510695510834442f},
    // group 4, dodecahedron 5
    {0.15374596599531526f, -1.7499968778943171f, -1.1070975703915067f},
    {0.21940333192509323f, -1.9520694721106862f, -1.2384123022510627f},
    {0.3256391816112633f, -1.8748846093148985f, -1.4508840016234028f},
    {0.32563918161126343f, -1.6251091464737355f, -1.450884001623403f},
    {0.21940333192509326f, -1.5479242836779479f, -1.2384123022510627f},
    {0.011215617067879456f, -1.4230365522573665f, -1.2971380356280877f},
    {-0.011215617067880018f, -1.4230365522573667f, -1.5459042342416935f},
    {0.18310883268382755f, -1.5479242836779479f, -1.640924466859984f},
    {0.09502023261829003f, -1.7499968778943171f, -1.7583759336140337f},
    {0.18310883268382752f, -1.9520694721106862f, -1.640924466859984f},
    {-0.011215617067880122f, -2.0769572035312676f, -1.5459042342416935f},
    {0.011215617067879352f, -2.0769572035312676f, -1.2971380356280877f},
    {-0.18310883268382822f, -1.9520694721106864f, -1.2021178030097972f},
    {-0.09502023261829069f, -1.7499968778943171f, -1.0846663362557476f},
    {-0.1831088326838282f, -1.547924283677948f, -1.2021178030097972f},
    {-0.325639181611264f, -1.6251091464737357f, -1.3921582682463784f},
    {-0.2194033319250939f, -1.547924283677948f, -1.6046299676187186f},
    {-0.15374596599531593f, -1.7499968778943171f, -1.7359446994782746f},
    {-0.21940333192509393f, -1.9520694721106864f, -1.6046299676187186f},
    {-0.3256391816112641f, -1.8748846093148988f, -1.3921582682463782f},
    // group 5, dodecahedron 0
    {-1.422978892864569f, -0.8794849565285183f, -1.4153459732500306f},
    {-1.3824004091081767f, -0.7545972251079368f, -1.2028742738776903f},
    {-1.2105071934922287f, -0.8794849565285185f, -1.0715595420181343f},
    {-1.1448498275624508f, -1.0815575507448876f, -1.2028742738776903f},
    {-1.2761645594220068f, -1.0815575507448876f, -1.4153459732500306f},
    {-1.422978892864569f, -1.2836301449612568f, -1.4153459732500306f},
    {-1.3824004091081767f, -1.4085178763818382f, -1.20287427387769f},
    {-1.2105071934922287f, -1.2836301449612568f, -1.071559542018134f},
    {-1.3167430431783986f, -1.2064452821654692f, -0.8590878426457939f},
    {-1.3167430431783986f, -0.956669819324306f, -0.8590878426457939f},
    {-1.5542936247241248f, -0.8794849565285183f, -0.8590878426457937f},
    {-1.594872108480517f, -0.7545972251079369f, -1.0715595420181343f},
    {-1.7667653240964651f, -0.8794849565285183f, -1.2028742738776903f},
    {-1.6605294744102952f, -0.956669819324306f, -1.4153459732500306f},
    {-1.6605294744102952f, -1.2064452821654692f, -1.4153459732500306f},
    {-1.7667653240964651f, -1.2836301449612566f, -1.20287427387769f},
    {-1.594872108480517f, -1.4085178763818385f, -1.071559542018134f},
    {-1.5542936247241248f, -1.2836301449612568f, -0.8590878426457937f},
    {-1.701107958166687f, -1.0815575507448876f, -0.8590878426457939f},
    {-1.832422690026243f, -1.0815575507448876f, -1.071559542018134f},
    // group 5, dodecahedron 1
    {-1.6605294744102952f, -0.9566698193243061f, -1.4948114204792073f},
    {-1.6605294744102952f, -1.206445282165469f, -1.4948114204792073f},
    {-1.422978892864569f, -1.2836301449612566f, -1.4948114204792073f},
    {-1.2761645594220068f, -1.0815575507448876f, -1.4948114204792073f},
    {-1.422978892864569f, -0.8794849565285185f, -1.4948114204792076f},
    {-1.382400409108177f, -0.754597225107937f, -1.707283119851548f},
    {-1.210507193492229f, -0.8794849565285187f, -1.838597851711104f},
    {-1.1448498275624508f, -1.0815575507448878f, -1.7072831198515477f},
    {-1.210507193492229f, -1.2836301449612566f, -1.8385978517111037f},
    {-1.382400409108177f, -1.4085178763818382f, -1.7072831198515477f},
    {-1.5948721084805173f, -1.408517876381838f, -1.8385978517111037f},
    {-1.7667653240964654f, -1.2836301449612564f, -1.7072831198515477f},
    {-1.8324226900262435f, -1.0815575507448874f, -1.838597851711104f},
    {-1.7667653240964654f, -0.8794849565285185f, -1.707283119851548f},
    {-1.5948721084805173f, -0.7545972251079369f, -1.838597851711104f},
    {-1.5542936247241252f, -0.8794849565285185f, -2.0510695510834442f},
    {-1.316743043178399f, -0.9566698193243062f, -2.0510695510834442f},
    {-1.316743043178399f, -1.2064452821654692f, -2.0510695510834442f},
    {-1.5542936247241252f, -1.2836301449612566f, -2.0510695510834442f},
    {-1.7011079581666875f, -1.0815575507448876f, -2.0510695510834442f},
    // group 5, dodecahedron 2
    {-1.6168358179084192f, -0.6869998781863813f, -1.1070975703915067f},
    {-1.7887290335243673f, -0.8118876096069629f, -1.2384123022510627f},
    {-1.6824931838381971f, -0.8890724724027504f, -1.450884001623403f},
    {-1.4449426022924712f, -0.8118876096069629f, -1.450884001623403f},
    {-1.4043641185360791f, -0.6869998781863813f, -1.2384123022510627f},
    {-1.3499223696741807f, -0.450409163960937f, -1.2971380356280877f},
    {-1.356854002226934f, -0.42907579256758077f, -1.5459042342416935f},
    {-1.4155797356039588f, -0.6524817581773061f, -1.640924466859984f},
    {-1.6349830675290522f, -0.6311483867839498f, -1.7583759336140337f},
    {-1.7999446505922472f, -0.7773694895978878f, -1.640924466859984f},
    {-1.9787694987609485f, -0.6311483867839499f, -1.5459042342416935f},
    {-1.9718378662081952f, -0.6524817581773061f, -1.2971380356280877f},
    {-1.9131121328311704f, -0.42907579256758077f, -1.2021178030097972f},
    {-1.693708800906077f, -0.4504091639609371f, -1.0846663362557476f},
    {-1.528747217842882f, -0.30418806114699914f, -1.2021178030097972f},
    {-1.646198684596932f, -0.19248507834213646f, -1.3921582682463782f},
    {-1.539962834910762f, -0.269669941137924f, -1.6046299676187186f},
    {-1.71185605052671f, -0.39455767255850555f, -1.7359446994782746f},
    {-1.92432774989905f, -0.39455767255850555f, -1.6046299676187186f},
    {-1.883749266142658f, -0.269669941137924f, -1.3921582682463782f},
    // group 5, dodecahedron 3
    {-1.2947793337504965f, -0.8890724724027506f, -0.8235498142724217f},
    {-1.5323299152962226f, -0.8118876096069629f, -0.8235498142724217f},
    {-1.5729083990526147f, -0.6869998781863814f, -1.036021513644762f},
    {-1.3604366996802744f, -0.6869998781863814f, -1.167336245504318f},
    {-1.1885434840643263f, -0.8118876096069629f, -1.036021513644762f},
    {-1.0054346513804984f, -0.6524817581773062f, -0.977295780267737f},
    {-1.0641603847575234f, -0.42907579256758077f, -1.0723160128860274f},
    {-1.2835637166826168f, -0.450409163960937f, -1.1897674796400775f},
    {-1.4485252997458118f, -0.30418806114699926f, -1.0723160128860276f},
    {-1.627350147914513f, -0.45040916396093705f, -0.9772957802677371f},
    {-1.62041851536176f, -0.4290757925675807f, -0.7285295816541312f},
    {-1.561692781984735f, -0.6524817581773061f, -0.6335093490358407f},
    {-1.3422894500596416f, -0.6311483867839499f, -0.5160578822817907f},
    {-1.1773278669964466f, -0.7773694895978877f, -0.6335093490358407f},
    {-0.9985030188277454f, -0.6311483867839499f, -0.7285295816541311f},
    {-1.0529447676896437f, -0.3945576725585055f, -0.6698038482771062f},
    {-1.0935232514460358f, -0.269669941137924f, -0.8822755476494465f},
    {-1.331073832991762f, -0.19248507834213635f, -0.8822755476494465f},
    {-1.4373096826779321f, -0.269669941137924f, -0.6698038482771063f},
    {-1.265416467061984f, -0.3945576725585055f, -0.5384891164175502f},
    // group 5, dodecahedron 4
    {-1.139431136745484f, -1.2836301449612568f, -1.036021513644762f},
    {-1.245666986431654f, -1.2064452821654692f, -0.8235498142724216f},
    {-1.245666986431654f, -0.9566698193243061f, -0.8235498142724216f},
    {-1.1394311367454841f, -0.8794849565285184f, -1.036021513644762f},
    {-1.073773770815706f, -1.0815575507448876f, -1.167336245504318f},
    {-0.8250075722021002f, -1.0815575507448876f, -1.1897674796400772f},
    {-0.7369189721365628f, -0.8794849565285184f, -1.0723160128860274f},
    {-0.9312434218882703f, -0.7545972251079369f, -0.977295780267737f},
    {-0.9088121877525108f, -0.7545972251079369f, -0.7285295816541312f},
    {-1.1031366375042184f, -0.8794849565285184f, -0.6335093490358407f},
    {-1.0150480374386808f, -1.0815575507448876f, -0.5160578822817907f},
    {-1.1031366375042182f, -1.2836301449612566f, -0.6335093490358406f},
    {-0.9088121877525107f, -1.4085178763818382f, -0.728529581654131f},
    {-0.9312434218882701f, -1.4085178763818382f, -0.9772957802677368f},
    {-0.7369189721365627f, -1.2836301449612568f, -1.0723160128860272f},
    {-0.5943886232091269f, -1.2064452821654692f, -0.8822755476494464f},
    {-0.5943886232091269f, -0.9566698193243061f, -0.8822755476494464f},
    {-0.700624472895297f, -0.8794849565285184f, -0.6698038482771062f},
    {-0.766281838825075f, -1.0815575507448876f, -0.5384891164175502f},
    {-0.7006244728952968f, -1.2836301449612568f, -0.669803848277106f},
    // group 5, dodecahedron 5
    {-1.3654771550632943f, -1.3254076029080961f, -1.4508840016234026f},
    {-1.3248986713069022f, -1.4502953343286775f, -1.2384123022510622f},
    {-1.153005455690954f, -1.3254076029080961f, -1.1070975703915065f},
    {-1.087348089761176f, -1.1233350086917269f, -1.2384123022510622f},
    {-1.218662821620732f, -1.123335008691727f, -1.4508840016234026f},
    {-1.0579852230726636f, -1.1446683800850832f, -1.6409244668599838f},
    {-0.8273662740796905f, -1.1578531287008023f, -1.545904234241693f},
    {-0.8455135237003233f, -1.1446683800850832f, -1.2971380356280873f},
    {-0.7617089081499124f, -1.359925722917171f, -1.2021178030097968f},
    {-0.9517493733864932f, -1.4716287057220339f, -1.0846663362557467f},
    {-0.9992594896956384f, -1.686886048554122f, -1.2021178030097965f},
    {-1.2298784386886115f, -1.6737012999384029f, -1.2971380356280873f},
    {-1.2117311890679787f, -1.686886048554122f, -1.545904234241693f},
    {-1.2955358046183896f, -1.471628705722034f, -1.6409244668599836f},
    {-1.1054953393818088f, -1.3599257229171713f, -1.7583759336140337f},
    {-0.9042392570773481f, -1.506146825731109f, -1.735944699478274f},
    {-0.7323460414613999f, -1.3812590943105276f, -1.6046299676187181f},
    {-0.6917675577050078f, -1.506146825731109f, -1.3921582682463778f},
    {-0.83858189114757f, -1.708219419947478f, -1.3921582682463778f},
    {-0.969896623007126f, -1.7082194199474783f, -1.6046299676187181f},
};

uint8_t const ddh_dodecahedron_vertex_adjacency[
        DDH_VERTICES_PER_DODECAHEDRON][3] = {
    { 1,  4, 13},
    { 0,  2, 11},
    { 1,  3,  9},
    { 2,  4,  7},
    { 0,  3,  5},
    { 4,  6, 14},
    { 5,  7, 16},
    { 3,  6,  8},
    { 7,  9, 17},
    { 2,  8, 10},
    { 9, 11, 18},
    { 1, 10, 12},
    {11, 13, 19},
    { 0, 12, 14},
    { 5, 13, 15},
    {14, 16, 19},
    { 6, 15, 17},
    { 8, 16, 18},
    {10, 17, 19},
    {12, 15, 18},
};

uint8_t const ddh_dodecahedron_vertex_opposition[
        DDH_VERTICES_PER_DODECAHEDRON] = {
    17, 16, 15, 19, 18, 10, 11, 12, 13, 14, 5, 6, 7, 8, 9, 2, 1, 0, 4, 3,
};

uint8_t const ddh_dodecahedron_face_vertices[DDH_FACES_PER_DODECAHEDRON][
        DDH_VERTICES_PER_FACE] = {
    { 0,  4,  3,  2,  1},
    { 3,  4,  5,  6,  7},
    { 2,  3,  7,  8,  9},
    { 1,  2,  9, 10, 11},
    { 0,  1, 11, 12, 13},
    { 0, 13, 14,  5,  4},
    { 5, 14, 15, 16,  6},
    {12, 19, 15, 14, 13},
    {10, 18, 19, 12, 11},
    { 8, 17, 18, 10,  9},
    { 6, 16, 17,  8,  7},
    {15, 19, 18, 17, 16},
};
/*
uint8_t const ddh_dodecahedron_vertex_faces[DDH_VERTICES_PER_DODECAHEDRON][
        DDH_VERTICES_PER_FACE] = {
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2},
    { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10},
    { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8},
    { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11},
    { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
};
*/
uint8_t const ddh_dodecahedron_face_adjacency[DDH_FACES_PER_DODECAHEDRON][5] = {
};
uint8_t const ddh_dodecahedron_face_opposition[DDH_FACES_PER_DODECAHEDRON] = {
};
uint8_t const ddh_group_dodecahedrons[DDH_TOTAL_GROUPS][
    DDH_DODECAHEDRONS_PER_GROUP] = {
};
//uint8_t const ddh_group_adjacencies[DDH_TOTAL_GROUPS][2];
uint8_t const ddh_dodecahedron_adjacencies[DDH_TOTAL_DODECAHEDRONS] = {
};

uint8_t const ddh_light_dodecahedron[DDH_TOTAL_VERTICES] = {
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
     2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
     3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
     2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
     3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
     2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
     3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
     2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
     3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
     2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
     3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
     2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
     3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
};

uint8_t const ddh_light_vertex[DDH_TOTAL_VERTICES] = {
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
};

uint8_t const ddh_light_faces[DDH_TOTAL_VERTICES][3] = {
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
    { 0,  4,  5}, { 0,  3,  4}, { 0,  2,  3}, { 0,  1,  2}, { 0,  1,  5}, { 1,  5,  6}, { 1,  6, 10}, { 1,  2, 10}, { 2,  9, 10}, { 2,  3,  9}, { 3,  8,  9}, { 3,  4,  8}, { 4,  7,  8}, { 4,  5,  7}, { 5,  6,  7}, { 6,  7, 11}, { 6, 10, 11}, { 9, 10, 11}, { 8,  9, 11}, { 7,  8, 11},
};

uint8_t const ddh_light_group[DDH_TOTAL_VERTICES] = {
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
     2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
     2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
     2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
     2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
     2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
     2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
     3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
     3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
     3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
     3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
     3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
     3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
};

color_t ddh_frame_buffer[DDH_TOTAL_VERTICES];

uint64_t ddh_total_ns = 0;
uint32_t ddh_last_frames = 0;
uint32_t ddh_total_frames = 0;
uint64_t ddh_frame_fraction = 0;

uint64_t ddh_frame_convert_offset = 0;

uint8_t ddh_mode;
uint8_t ddh_submode;
bool ddh_last_button_a;
bool ddh_button_a;
bool ddh_button_a_edge;
bool ddh_last_button_b;
bool ddh_button_b;
bool ddh_button_b_edge;

uint32_t ddh_dais_proximity[4][4];

uint32_t ddh_debug_start_frame;
uint32_t ddh_debug_cursor;
uint8_t ddh_debug_last_submode;
uint32_t ddh_debug_edge_frame;

void ddh_initialize_mode_run(void);
void ddh_process_mode_run(void);
void ddh_initialize_mode_configure(void);
void ddh_process_mode_configure(void);
void ddh_initialize_mode_debug_locate(void);
void ddh_process_mode_debug_locate(void);
void ddh_initialize_mode_debug_sweep(void);
void ddh_process_mode_debug_sweep(void);
void ddh_initialize_mode_debug_color(void);
void ddh_process_mode_debug_color(void);
void ddh_initialize_mode_debug_log(void);
void ddh_process_mode_debug_log(void);

void ddh_initialize_debug_cursor(void);
void ddh_process_debug_cursor(uint32_t cursor_wrap);

color_t ddh_colors[10] = {
    {{ 31,  31,  31, 0}},
    {{127,  63,   0, 0}},
    {{255,   0,   0, 0}},
    {{191,  95,   0, 0}},
    {{255, 255,   0, 0}},
    {{  0, 255,   0, 0}},
    {{  0,   0, 255, 0}},
    {{191,   0, 255, 0}},
    {{127, 127, 127, 0}},
    {{255, 255, 255, 0}},
};

uint8_t ddh_last_debug_mode = 255;

void ddh_initialize(void)
{
    di_initialize();
    
    for(size_t i = 0; i < DDH_TOTAL_VERTICES; ++i) {
        ddh_frame_buffer[i] = ddh_make_color(255, 255, 255);
    }
}

void ddh_process(uint64_t delta_ns)
{
    static const uint64_t billion = 1000000000ULL;
    static const uint64_t tenbillion = 10000000000ULL;
    
    ddh_total_ns += delta_ns;
    
    // 30 FPS
    ddh_frame_fraction += delta_ns * DDH_FPS;
    
    if(ddh_frame_fraction > tenbillion) {
        uint32_t delta_frames = (uint32_t)(ddh_frame_fraction / billion);
        ddh_total_frames += delta_frames;
        ddh_frame_fraction -= delta_frames * billion;
    }
    else {
        while(ddh_frame_fraction > billion) {
            ++ddh_total_frames;
            ddh_frame_fraction -= billion;
        }
    }
    
    if((ddh_total_frames - ddh_last_frames) == 0) { // mod 2^32 arithmetic
        return;
    }
    
    ddh_last_frames = ddh_total_frames;
    
    if(ddh_mode != ddh_last_debug_mode) {
        ddh_last_debug_mode = ddh_mode;
        switch(ddh_mode) {
        default:
        case DDH_MODE_RUN:
            ddh_initialize_mode_run();
            break;
        case DDH_MODE_CONFIGURE:
            ddh_initialize_mode_configure();
            break;
        case DDH_MODE_DEBUG_LOCATE:
            ddh_initialize_mode_debug_locate();
            break;
        case DDH_MODE_DEBUG_SWEEP:
            ddh_initialize_mode_debug_sweep();
            break;
        case DDH_MODE_DEBUG_COLOR:
            ddh_initialize_mode_debug_color();
            break;
        case DDH_MODE_DEBUG_LOG:
            ddh_initialize_mode_debug_log();
            break;
        }
    }
    
    ddh_button_a_edge = (ddh_button_a != ddh_last_button_a);
    ddh_button_b_edge = (ddh_button_b != ddh_last_button_b);
    ddh_last_button_a = ddh_button_a;
    ddh_last_button_b = ddh_button_b;
    
    di_process();
    
    switch(ddh_mode) {
    default:
    case DDH_MODE_RUN:
        ddh_process_mode_run();
        break;
    case DDH_MODE_CONFIGURE:
        ddh_process_mode_configure();
        break;
    case DDH_MODE_DEBUG_LOCATE:
        ddh_process_mode_debug_locate();
        break;
    case DDH_MODE_DEBUG_SWEEP:
        ddh_process_mode_debug_sweep();
        break;
    case DDH_MODE_DEBUG_COLOR:
        ddh_process_mode_debug_color();
        break;
    case DDH_MODE_DEBUG_LOG:
        ddh_process_mode_debug_log();
        break;
    }
}

uint64_t ddh_ns_since(uint64_t total_ns)
{
    return ddh_total_ns - total_ns;
}

uint32_t ddh_ms_since(uint64_t total_ns)
{
    return ddh_ns_since(total_ns) / 1000000ULL;
}

uint32_t ddh_frames_since(uint32_t total_frames)
{
    return ddh_total_frames - total_frames;
}

void ddh_initialize_mode_run(void)
{
}

static inline color_t ddh_add_colors(color_t x, color_t y)
{
    int32_t r = (int32_t)x.r + (int32_t)y.r;
    int32_t g = (int32_t)x.g + (int32_t)y.g;
    int32_t b = (int32_t)x.b + (int32_t)y.b;
    
    return ddh_make_color(r > 255 ? 255 : r, g > 255 ? 255 : g,
        b > 255 ? 255 : b);
}

float ddh_invsqrt(float x)
{
    float xhalf = 0.5f * x;
    int i = *(int*)&x;         // evil floating point bit level hacking
    i = 0x5f3759df - (i >> 1);  // what the fuck?
    x = *(float*)&i;
    x = x*(1.5f-(xhalf*x*x));
    return x;
}

#define PI_F 3.1415926535897932384626f
#define TWO_PI_F (2.0f * 3.1415926535897932384626f)

void ddh_process_mode_run(void)
{
    float t = (float)(ddh_total_ns % (1LL << 48)) / 1.0e9f;
    fix16_t beat_t = fix16_from_float(fmodf(t * (140.0f / 60.0f), 1.0f));
    fix16_t measure_t = fix16_from_float(fmodf(t * (140.0f / 16.0f / 60.0f), 1.0f));
    
    for(size_t i = 0; i < DDH_TOTAL_VERTICES; ++i) {
        color_t beat_color;
        color_t plasma_color;
        
        if(beat_t < fix16_from_float(0.5f)) {
            int32_t l = fix16_to_int(fix16_mul((fix16_from_float(0.5f) - beat_t), fix16_from_int(127 * 2)));
            beat_color = ddh_make_color(l, l, l);
        }
        else if(beat_t > fix16_from_float(0.98f)) {
            int32_t l = fix16_to_int(fix16_mul((beat_t - fix16_from_float(0.98f)), fix16_from_int(127 * 50)));
            beat_color = ddh_make_color(l, l, l);
        }
        else {
            beat_color = ddh_make_color(0, 0, 0);
        }
        
        {
            fix16_t a_x = 2 * fix16_sin(fix16_mul(measure_t, 2 * fix16_pi));
            fix16_t a_y = 2 * fix16_cos(fix16_mul(measure_t, 2 * fix16_pi));
            fix16_t a_z = fix16_from_int(-2);
            
            int32_t l = fix16_to_int(fix16_mul(fix16_sin(fix16_sqrt(
                fix16_sq(fix16_from_float(ddh_vertex_coords[i].x) - a_x) +
                fix16_sq(fix16_from_float(ddh_vertex_coords[i].y) - a_y) +
                fix16_sq(fix16_from_float(ddh_vertex_coords[i].z) - a_z)) * 1 * 2 * fix16_pi) + fix16_from_int(1),
                fix16_from_int(127)));
            
            plasma_color = ddh_make_color(l, 0, 0);
        }
        
        ddh_frame_buffer[i] = ddh_add_colors(ddh_make_color(0, 0, 0), plasma_color);
    }
}

void ddh_initialize_mode_configure(void)
{
}

void ddh_process_mode_configure(void)
{
}

void ddh_initialize_mode_debug_locate(void)
{
    ddh_debug_start_frame = ddh_total_frames;
    ddh_debug_cursor = 0;
    ddh_debug_last_submode = 255;
}

void ddh_process_mode_debug_locate(void)
{
    static uint32_t const cycle_frames = DDH_FPS;
    
    uint32_t frame;
    bool cursor_on = false;
    color_t cursor_color = ddh_make_color(0, 0, 0);
    uint32_t cursor_wrap;
    
    while(true) {
        frame = ddh_frames_since(ddh_debug_start_frame);
        if(frame > cycle_frames) {
            ddh_debug_start_frame += cycle_frames;
        }
        else {
            break;
        }
    }
    
    if(frame < cycle_frames * 1 / 2) {
        cursor_on = true;
        cursor_color = ddh_make_color(255, 255, 255);
    }
    
    if(ddh_submode != ddh_debug_last_submode) {
        ddh_debug_cursor = 0;
        ddh_debug_last_submode = ddh_submode;
    }
    
    switch(ddh_submode) {
    case DDH_SUBMODE_DEBUG_LOCATE_VERTICES:
        cursor_wrap = DDH_VERTICES_PER_DODECAHEDRON;
        break;
    case DDH_SUBMODE_DEBUG_LOCATE_DODECAHEDRONS:
        cursor_wrap = DDH_DODECAHEDRONS_PER_GROUP;
        break;
    case DDH_SUBMODE_DEBUG_LOCATE_FACES:
        cursor_wrap = DDH_FACES_PER_DODECAHEDRON;
        break;
    case DDH_SUBMODE_DEBUG_LOCATE_GROUPS:
        cursor_wrap = DDH_TOTAL_GROUPS;
        break;
    }
    
    if(ddh_button_a && ddh_button_a_edge) {
        ++ddh_debug_cursor;
    }
    if(ddh_button_b && ddh_button_b_edge) {
        ddh_debug_cursor += cursor_wrap - 1;
    }
    ddh_debug_cursor %= cursor_wrap;
    
    for(size_t i = 0; i < DDH_TOTAL_VERTICES; ++i) {
        switch(ddh_submode) {
        case DDH_SUBMODE_DEBUG_LOCATE_VERTICES:
            {
                if((ddh_light_vertex[i] == ddh_debug_cursor) && cursor_on) {
                    ddh_frame_buffer[i] = cursor_color;
                }
                else {
                    color_t c = ddh_colors[ddh_light_dodecahedron[i]];
                    ddh_frame_buffer[i] = ddh_make_color(c.r / 4, c.g / 4, c.b / 4);
                }
            }
            break;
        case DDH_SUBMODE_DEBUG_LOCATE_DODECAHEDRONS:
            {
                if((ddh_light_dodecahedron[i] == ddh_debug_cursor) && cursor_on) {
                    ddh_frame_buffer[i] = cursor_color;
                }
                else {
                    color_t c = ddh_colors[ddh_light_group[i]];
                    ddh_frame_buffer[i] = ddh_make_color(c.r / 4, c.g / 4, c.b / 4);
                }
            }
            break;
        case DDH_SUBMODE_DEBUG_LOCATE_FACES:
            {
                bool is_face = false;
                for(size_t j = 0; j < 3; ++j) {
                    if(ddh_light_faces[i][j] == ddh_debug_cursor) {
                        is_face = true;
                    }
                }
                if(is_face && cursor_on) {
                    ddh_frame_buffer[i] = cursor_color;
                }
                else {
                    color_t c = ddh_colors[ddh_light_dodecahedron[i]];
                    ddh_frame_buffer[i] = ddh_make_color(c.r / 4, c.g / 4, c.b / 4);
                }
            }
            break;
        case DDH_SUBMODE_DEBUG_LOCATE_GROUPS:
            {
                if((ddh_light_group[i] == ddh_debug_cursor) && cursor_on) {
                    ddh_frame_buffer[i] = cursor_color;
                }
                else {
                    color_t c = ddh_colors[ddh_light_group[i]];
                    ddh_frame_buffer[i] = ddh_make_color(c.r / 4, c.g / 4, c.b / 4);
                }
            }
            break;
        }
    }
}

void ddh_initialize_mode_debug_sweep(void)
{
    ddh_debug_start_frame = ddh_total_frames;
    ddh_initialize_debug_cursor();
}

void ddh_process_mode_debug_sweep(void)
{
    static uint32_t const cursor_wrap = 200;
    static uint32_t const cycle_frames = DDH_FPS * 10;
    static float const scale = 5.5f;
    uint32_t frame;
    float xmin = 0, xmax = 0;
    float ymin = 0, ymax = 0;
    float zmin = 0, zmax = 0;
    
    while(true) {
        frame = ddh_frames_since(ddh_debug_start_frame);
        if(frame > cycle_frames) {
            ddh_debug_start_frame += cycle_frames;
        }
        else {
            break;
        }
    }
    
    ddh_process_debug_cursor(cursor_wrap);
    
    switch(ddh_submode) {
    case DDH_SUBMODE_DEBUG_SWEEP_ALL:
        {
            if(frame < cycle_frames * 1 / 3) {
                float t = (float)(frame - cycle_frames * 0 / 3) / (float)(cycle_frames * 1 / 3 - cycle_frames * 0 / 3 - 1);
                xmin = t * scale - scale * 0.5f - 0.5f;
                xmax = t * scale - scale * 0.5f + 0.5f;
            }
            else if(frame < cycle_frames * 2 / 3) {
                float t = (float)(frame - cycle_frames * 1 / 3) / (float)(cycle_frames * 2 / 3 - cycle_frames * 1 / 3 - 1);
                ymin = t * scale - scale * 0.5f - 0.5f;
                ymax = t * scale - scale * 0.5f + 0.5f;
            }
            else {
                float t = (float)(frame - cycle_frames * 2 / 3) / (float)(cycle_frames * 3 / 3 - cycle_frames * 2 / 3 - 1);
                zmin = t * scale - scale * 0.5f - 1.0f - 0.5f;
                zmax = t * scale - scale * 0.5f - 1.0f + 0.5f;
            }
        }
        break;
    case DDH_SUBMODE_DEBUG_SWEEP_X:
        {
            float t = (float)frame / (float)(cycle_frames - 1);
            xmin = t * scale - scale * 0.5f - 0.5f;
            xmax = t * scale - scale * 0.5f + 0.5f;
        }
        break;
    case DDH_SUBMODE_DEBUG_SWEEP_Y:
        {
            float t = (float)frame / (float)(cycle_frames - 1);
            ymin = t * scale - scale * 0.5f - 0.5f;
            ymax = t * scale - scale * 0.5f + 0.5f;
        }
        break;
    case DDH_SUBMODE_DEBUG_SWEEP_Z:
        {
            float t = (float)frame / (float)(cycle_frames - 1);
            zmin = t * scale - scale * 0.5f - 1.0f - 0.5f;
            zmax = t * scale - scale * 0.5f - 1.0f + 0.5f;
        }
        break;
    case DDH_SUBMODE_DEBUG_SWEEP_STEP_X:
        {
            float t = (float)ddh_debug_cursor / (float)(cursor_wrap - 1);
            xmin = t * scale - scale * 0.5f - 0.5f;
            xmax = t * scale - scale * 0.5f + 0.5f;
        }
        break;
    case DDH_SUBMODE_DEBUG_SWEEP_STEP_Y:
        {
            float t = (float)ddh_debug_cursor / (float)(cursor_wrap - 1);
            ymin = t * scale - scale * 0.5f - 0.5f;
            ymax = t * scale - scale * 0.5f + 0.5f;
        }
        break;
    case DDH_SUBMODE_DEBUG_SWEEP_STEP_Z:
        {
            float t = (float)ddh_debug_cursor / (float)(cursor_wrap - 1);
            zmin = t * scale - scale * 0.5f - 1.0f - 0.5f;
            zmax = t * scale - scale * 0.5f - 1.0f + 0.5f;
        }
        break;
    }
    for(size_t i = 0; i < DDH_TOTAL_VERTICES; ++i) {
        vertex_t vertex = ddh_vertex_coords[i];
        ddh_frame_buffer[i] = ddh_make_color(
            vertex.x >= xmin && vertex.x < xmax ? 255 : 0,
            vertex.y >= ymin && vertex.y < ymax ? 255 : 0,
            vertex.z >= zmin && vertex.z < zmax ? 255 : 0);
    }
}

void ddh_initialize_mode_debug_color(void)
{
    ddh_initialize_debug_cursor();
}

void ddh_process_mode_debug_color(void)
{
    static uint32_t const cursor_wrap = 256;
    
    ddh_process_debug_cursor(cursor_wrap);
    
    if(ddh_submode == DDH_SUBMODE_DEBUG_COLOR_GRADIENT) {
        for(size_t i = 0; i < DDH_TOTAL_VERTICES; ++i) {
            ddh_frame_buffer[i] = ddh_make_color(
                255 * ddh_light_dodecahedron[i] /
                    (DDH_DODECAHEDRONS_PER_GROUP - 1),
                255 * ddh_light_vertex[i] /
                    (DDH_VERTICES_PER_DODECAHEDRON - 1),
                255 * ddh_light_group[i] / (DDH_TOTAL_GROUPS - 1));
        }
    }
    else {
        color_t color = ddh_make_color(0xFF, 0x00, 0xFF);
        
        switch(ddh_submode) {
        case DDH_SUBMODE_DEBUG_COLOR_WHITE:
            color = ddh_make_color(0xFF, 0xFF, 0xFF);
            break;
        case DDH_SUBMODE_DEBUG_COLOR_RED:
            color = ddh_make_color(0xFF, 0x00, 0x00);
            break;
        case DDH_SUBMODE_DEBUG_COLOR_GREEN:
            color = ddh_make_color(0x00, 0xFF, 0x00);
            break;
        case DDH_SUBMODE_DEBUG_COLOR_BLUE:
            color = ddh_make_color(0x00, 0x00, 0xFF);
            break;
        case DDH_SUBMODE_DEBUG_COLOR_STEP_WHITE:
            color = ddh_make_color(ddh_debug_cursor, ddh_debug_cursor, ddh_debug_cursor);
            break;
        case DDH_SUBMODE_DEBUG_COLOR_STEP_RED:
            color = ddh_make_color(ddh_debug_cursor, 0x00, 0x00);
            break;
        case DDH_SUBMODE_DEBUG_COLOR_STEP_GREEN:
            color = ddh_make_color(0x00, ddh_debug_cursor, 0x00);
            break;
        case DDH_SUBMODE_DEBUG_COLOR_STEP_BLUE:
            color = ddh_make_color(0x00, 0x00, ddh_debug_cursor);
            break;
        }
        
        for(size_t i = 0; i < DDH_TOTAL_VERTICES; ++i) {
            ddh_frame_buffer[i] = color;
        }
    }
}

void ddh_initialize_mode_debug_log(void)
{
}

void ddh_process_mode_debug_log(void)
{
    for(size_t i = 0; i < DDH_TOTAL_VERTICES; ++i) {
        ddh_frame_buffer[i] = ddh_make_color(0x00, 0xFF, 0xFF);
    }
}

void ddh_initialize_debug_cursor(void)
{
    ddh_debug_cursor = 0;
    ddh_debug_last_submode = 255;
    ddh_debug_edge_frame = ddh_total_frames;
}

void ddh_process_debug_cursor(uint32_t cursor_wrap)
{
    if(ddh_submode != ddh_debug_last_submode) {
        ddh_debug_cursor = 0;
        ddh_debug_last_submode = ddh_submode;
    }
    
    if(ddh_button_a && !ddh_button_b) {
        if(ddh_button_a_edge) {
            ddh_debug_edge_frame = ddh_total_frames;
        }
        if(ddh_button_a_edge ||
                ((ddh_frames_since(ddh_debug_edge_frame) >
                (DDH_FPS * 1 / 2)) &&
                (ddh_frames_since(ddh_debug_edge_frame) % 2 == 0))) {
            ++ddh_debug_cursor;
        }
    }
    if(!ddh_button_a && ddh_button_b) {
        if(ddh_button_b_edge) {
            ddh_debug_edge_frame = ddh_total_frames;
        }
        if(ddh_button_b_edge ||
                ((ddh_frames_since(ddh_debug_edge_frame) >
                (DDH_FPS * 1 / 2)) &&
                (ddh_frames_since(ddh_debug_edge_frame) % 2 == 0))) {
            ddh_debug_cursor += cursor_wrap - 1;
        }
    }
    ddh_debug_cursor %= cursor_wrap;
}


